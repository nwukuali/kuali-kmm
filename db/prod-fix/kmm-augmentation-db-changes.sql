--CHANGES TO GL OBJECT CODES
UPDATE MM_WAREHOUSE_ACCOUNTS_T T SET T.FIN_OBJECT_CD='6565' , T.OFFSET_OBJECT_CD='1083' WHERE T.WAREHOUSE_ACCOUNT_TYPE_CD='CG';
UPDATE MM_WAREHOUSE_ACCOUNTS_T T SET T.FIN_OBJECT_CD='6564' , T.OFFSET_OBJECT_CD='1083' WHERE T.WAREHOUSE_ACCOUNT_TYPE_CD='WR';
UPDATE MM_WAREHOUSE_ACCOUNTS_T T SET T.FIN_OBJECT_CD='4050' , T.OFFSET_OBJECT_CD='1100' WHERE T.WAREHOUSE_ACCOUNT_TYPE_CD='IC';
DELETE FROM MM_WAREHOUSE_OBJECT_T T WHERE T.WAREHOUSE_OBJECT_TYPE_CD='RECV';
UPDATE MM_WAREHOUSE_OBJECT_T T SET T.FIN_OBJECT_CD='6563' , T.OFFSET_OBJECT_CD='1083';

--ADDING NEW TABLES FOR ORDER AUTO LIMIT
CREATE SEQUENCE ORDER_AUTO_LIMIT_ID_S START WITH 5000 INCREMENT BY 1;
CREATE TABLE MM_ORDER_AUTO_LIMIT_T
(
  ORDER_AUTO_LIMIT_ID   NUMBER,
  FIN_COA_CD      VARCHAR2(2) NOT NULL,
  ORG_CD          VARCHAR2(32) NULL,
  ACCOUNT_NBR     VARCHAR2(32) NULL,
  OBJ_ID          VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
  VER_NBR         NUMBER(8) DEFAULT 1 NOT NULL,
  AUTO_LIMT_AMT  NUMBER(21,4),
  ACTV_IND        VARCHAR2(1) DEFAULT 'Y',
  LAST_UPDATE_DT TIMESTAMP
);
ALTER TABLE MM_ORDER_AUTO_LIMIT_T ADD CONSTRAINT MM_ORDER_AUTO_LIMIT_TP1 PRIMARY KEY (ORDER_AUTO_LIMIT_ID);

-- NEW MARKUP TYPE 03/21/2011
INSERT INTO MM_MARKUP_TYPE_T (MARKUP_TYPE_CD, OBJ_ID, VER_NBR, NM, ACTV_IND, LAST_UPDATE_DT)
       VALUES(10, SYS_GUID(), 1, 'CASH SALE + CATALOG ITEM MARKUP', 'Y', SYSDATE);    
       
CREATE TABLE MM_MASS_UPDATE_DOC_T (
  FDOC_NBR                     VARCHAR2(14) NOT NULL,
  OBJ_ID                       VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
  VER_NBR                      NUMBER(8) DEFAULT 1 NOT NULL,  
  PREVIOUS_AGREEMENT_NBR       VARCHAR2(15),
  NEW_AGREEMENT_NBR            VARCHAR2(15), 
  UPDATE_FILE_NM               VARCHAR2(255),
  FINAL_IND                    VARCHAR2(1) NOT NULL,
  LAST_UPDATE_DT               TIMESTAMP(6) NOT NULL
); 
   
-- AGREEMENT MASS MAINTENANCE 4/8/2011
ALTER TABLE MM_MASS_UPDATE_DOC_T
  ADD CONSTRAINT MM_MASS_UPDATE_DOC_TP1 PRIMARY KEY (FDOC_NBR);
ALTER TABLE MM_MASS_UPDATE_DOC_T
  ADD CONSTRAINT MM_MASS_UPDATE_DOC_TC0 UNIQUE (OBJ_ID);
ALTER TABLE MM_MASS_UPDATE_DOC_T
  ADD CONSTRAINT MM_MASS_UPDATE_DOC_TR1 FOREIGN KEY (PREVIOUS_AGREEMENT_NBR)
  REFERENCES MM_AGREEMENT_T (AGREEMENT_NBR);
ALTER TABLE MM_MASS_UPDATE_DOC_T
  ADD CONSTRAINT MM_MASS_UPDATE_DOC_TR2 FOREIGN KEY (NEW_AGREEMENT_NBR)
  REFERENCES MM_AGREEMENT_T (AGREEMENT_NBR);

CREATE TABLE MM_MASS_UPDATE_DETAIL_T (
  MASS_UPDATE_DETAIL_ID        NUMBER(18) NOT NULL,
  OBJ_ID                       VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
  VER_NBR                      NUMBER(8) DEFAULT 1 NOT NULL,
  MASS_UPDATE_DOC_NBR          VARCHAR2(14) NOT NULL,
  STOCK_ID                     NUMBER(18) NOT NULL,
  STOCK_CST                    NUMBER(19,4),
  CYCLE_CNT_CD                 VARCHAR2(1),
  LAST_UPDATE_DT               TIMESTAMP(6) NOT NULL
);

ALTER TABLE MM_MASS_UPDATE_DETAIL_T
  ADD CONSTRAINT MM_MASS_UPDATE_DETAIL_TP1 PRIMARY KEY (MASS_UPDATE_DETAIL_ID);
ALTER TABLE MM_MASS_UPDATE_DETAIL_T
  ADD CONSTRAINT MM_MASS_UPDATE_DETAIL_TC0 UNIQUE (OBJ_ID);
ALTER TABLE MM_MASS_UPDATE_DETAIL_T
  ADD CONSTRAINT MM_MASS_UPDATE_DETAIL_TR2 FOREIGN KEY (STOCK_ID)
  REFERENCES MM_STOCK_T (STOCK_ID);
  
CREATE SEQUENCE MM_MASS_UPDATE_DETAIL_S START WITH 5000 INCREMENT BY 1;

CREATE OR REPLACE VIEW MM_CHECKIN_CORRECTION_V AS
SELECT DISTINCT CT.ORDER_DETAIL_ID,
      CT.PO_ID,
      OT.DISTRIBUTOR_NBR,
      OT.ORDER_DOC_NBR,
      OD.ORDER_ID,
      OD.REQS_ID,
      OD.WAREHOUSE_CD,
      CD.FDOC_NBR AS CHECKIN_DOC_NBR,
      CD.VENDOR_REF_NBR,
      CD.VENDOR_SHIPMENT_NBR,
      OD.VENDOR_NM,
      OT.ORDER_ITEM_QTY
  FROM MM_CHECKIN_DETAIL_T CT
  LEFT JOIN MM_CHECKIN_DOC_T CD
    ON CD.FDOC_NBR = CT.CHECKIN_DOC_NBR
  LEFT JOIN MM_ORDER_DOC_T OD
    ON OD.FDOC_NBR = CD.ORDER_DOC_NBR
  LEFT JOIN MM_ORDER_DETAIL_T OT
    ON OT.ORDER_DETAIL_ID = CT.ORDER_DETAIL_ID
  LEFT JOIN MM_CHECKIN_DETAIL_T CTR
    ON CTR.CORRECTED_CHECKIN_DETAIL_ID = CT.CHECKIN_DETAIL_ID
  LEFT JOIN MM_CHECKIN_DOC_T CTRDOC
    ON CTRDOC.FDOC_NBR = CTR.CHECKIN_DOC_NBR
 WHERE CD.FINAL_IND = 'Y'
   AND (CTRDOC.FINAL_IND = 'N' OR CTRDOC.FINAL_IND IS NULL)
   AND CT.ACCEPTED_ITEM_QTY > 0;
   
CREATE OR REPLACE VIEW MM_AWAITING_SHIPMENT_V AS
SELECT ORDERDOC.ORDER_ID AS ORDER_NBR,
       PICKLINE.STOCK_QTY AS QTY_TO_SHIP,
       (SELECT SUM(PLINE.STOCK_QTY)
          FROM MM_PICK_LIST_LINE_T PLINE
          LEFT JOIN MM_CATALOG_ITEM_T CITEM
            ON PLINE.STOCK_ID = CITEM.STOCK_ID
         WHERE CITEM.CATALOG_ITEM_ID = DETAIL.CATALOG_ITEM_ID
           AND PLINE.PICK_STATUS_CD IN ('INIT', 'ASND', 'PRTD')) AS TOTAL_TO_SHIP,
       DETAIL.STOCK_UNIT_OF_ISSUE_CD AS UI,
       ORDERDOC.DELIVERY_DEPARTMENT_NM AS SHIP_TO_CD,
       ORDERDOC.ORDER_CREATE_DT AS DATE_ENTERED,
       DETAIL.DISTRIBUTOR_NBR AS ITEM_NBR,
       DETAIL.ORDER_ITEM_DETAIL_DESC AS ITEM_DESC,
       (ZN.WAREHOUSE_CD || ' / ' || ZN.ZONE_CD || ' / ' || BN.BIN_NBR ||
       ' / ' || BN.SHELF_ID || ' / ' || BN.SHELF_ID_NBR) AS BIN_LOCATION
  FROM MM_PICK_LIST_LINE_T PICKLINE
  LEFT JOIN MM_ORDER_DETAIL_T DETAIL
    ON DETAIL.ORDER_DETAIL_ID = PICKLINE.ORDER_DETAIL_ID
  LEFT JOIN MM_ORDER_DOC_T ORDERDOC
    ON ORDERDOC.FDOC_NBR = DETAIL.ORDER_DOC_NBR
  LEFT JOIN MM_BIN_T BN
    ON BN.BIN_ID = PICKLINE.BIN_ID
  LEFT JOIN MM_ZONE_T ZN
    ON ZN.ZONE_ID = BN.ZONE_ID
 WHERE PICKLINE.PICK_STATUS_CD IN ('INIT', 'ASND', 'PRTD')
 ORDER BY DETAIL.DISTRIBUTOR_NBR;

commit;
