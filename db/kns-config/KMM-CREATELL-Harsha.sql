create table KRNS_ADHOC_RTE_ACTN_RECIP_T
(RECIP_TYP_CD DECIMAL(1) NOT NULL , 
ACTN_RQST_CD VARCHAR(30) NOT NULL , 
ACTN_RQST_RECIP_ID VARCHAR(70) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
DOC_HDR_ID VARCHAR(14) NOT NULL ,
constraint KRNS_ADHOC_RTE_ACTN_PK_225 primary key (ACTN_RQST_CD, ACTN_RQST_RECIP_ID, DOC_HDR_ID, RECIP_TYP_CD) 
);

create table KRNS_ATT_T
(NTE_ID DECIMAL(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
MIME_TYP VARCHAR(150) , 
FILE_NM VARCHAR(250) , 
ATT_ID VARCHAR(36) , 
FILE_SZ DECIMAL(14) , 
ATT_TYP_CD VARCHAR(40) , 
FILE_CONTENT BLOB ,
constraint KRNS_ATT_T_PK_226 primary key (NTE_ID) 
);

create table KRNS_CAMPUS_T
(CAMPUS_CD VARCHAR(2) NOT NULL , 
CAMPUS_NM VARCHAR(250) , 
CAMPUS_SHRT_NM VARCHAR(250) , 
CAMPUS_TYP_CD VARCHAR(1) , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL ,
constraint KRNS_CAMPUS_T_PK_227 primary key (CAMPUS_CD) 
);

create table KRNS_CMP_TYP_T
(CAMPUS_TYP_CD VARCHAR(1) NOT NULL , 
CMP_TYP_NM VARCHAR(250) , 
DOBJ_MAINT_CD_ACTV_IND VARCHAR(1) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL ,
constraint KRNS_CMP_TYP_T_PK_228 primary key (CAMPUS_TYP_CD) 
);

create table KRNS_DOC_HDR_T
(DOC_HDR_ID VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
FDOC_DESC VARCHAR(40) , 
ORG_DOC_HDR_ID VARCHAR(10) , 
TMPL_DOC_HDR_ID VARCHAR(14) , 
EXPLANATION VARCHAR(400) ,
constraint KRNS_DOC_HDR_T_PK_229 primary key (DOC_HDR_ID) 
);

create table KRNS_DOC_TYP_T
(DOC_TYP_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(40) , 
ACTV_IND VARCHAR(1) ,
constraint KRNS_DOC_TYP_T_PK_230 primary key (DOC_TYP_CD) 
);

create table KRNS_LOOKUP_RSLT_T
(LOOKUP_RSLT_ID VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PRNCPL_ID VARCHAR(40) NOT NULL , 
LOOKUP_DT DATE NOT NULL , 
SERIALZD_RSLTS CLOB ,
constraint KRNS_LOOKUP_RSLT_T_PK_231 primary key (LOOKUP_RSLT_ID) 
);

create table KRNS_LOOKUP_SEL_T
(LOOKUP_RSLT_ID VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PRNCPL_ID VARCHAR(40) NOT NULL , 
LOOKUP_DT DATE NOT NULL , 
SEL_OBJ_IDS CLOB ,
constraint KRNS_LOOKUP_SEL_T_PK_232 primary key (LOOKUP_RSLT_ID) 
);

create table KRNS_MAINT_DOC_ATT_T
(DOC_HDR_ID VARCHAR(14) NOT NULL , 
ATT_CNTNT BLOB NOT NULL , 
FILE_NM VARCHAR(150) , 
CNTNT_TYP VARCHAR(50) , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL ,
constraint KRNS_MAINT_DOC_ATT_T_PK_233 primary key (DOC_HDR_ID) 
);

create table KRNS_MAINT_DOC_T
(DOC_HDR_ID VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
DOC_CNTNT CLOB ,
constraint KRNS_MAINT_DOC_T_PK_234 primary key (DOC_HDR_ID) 
);

create table KRNS_MAINT_LOCK_T
(MAINT_LOCK_ID VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
DOC_HDR_ID VARCHAR(14) NOT NULL , 
MAINT_LOCK_REP_TXT VARCHAR(500) NOT NULL ,
constraint KRNS_MAINT_LOCK_T_PK_235 primary key (MAINT_LOCK_ID) 
);

create table KRNS_NMSPC_T
(NMSPC_CD VARCHAR(20) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(40) , 
ACTV_IND CHAR(1) NOT NULL , 
APPL_NMSPC_CD VARCHAR(20) ,
constraint KRNS_NMSPC_T_PK_236 primary key (NMSPC_CD) 
);

create table KRNS_NTE_T
(NTE_ID DECIMAL(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
RMT_OBJ_ID VARCHAR(36) NOT NULL , 
AUTH_PRNCPL_ID VARCHAR(40) NOT NULL , 
POST_TS DATE NOT NULL , 
NTE_TYP_CD VARCHAR(4) NOT NULL , 
TXT VARCHAR(800) , 
PRG_CD VARCHAR(1) , 
TPC_TXT VARCHAR(40) ,
constraint KRNS_NTE_T_PK_237 primary key (NTE_ID) 
);

create table KRNS_NTE_TYP_T
(NTE_TYP_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
TYP_DESC_TXT VARCHAR(100) , 
ACTV_IND VARCHAR(1) ,
constraint KRNS_NTE_TYP_T_PK_238 primary key (NTE_TYP_CD) 
);

create table KRNS_PARM_DTL_TYP_T
(NMSPC_CD VARCHAR(20) NOT NULL , 
PARM_DTL_TYP_CD VARCHAR(100) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(255) , 
ACTV_IND CHAR(1) NOT NULL ,
constraint KRNS_PARM_DTL_TYP_T_PK_239 primary key (NMSPC_CD, PARM_DTL_TYP_CD) 
);

create table KRNS_PARM_T
(NMSPC_CD VARCHAR(20) NOT NULL , 
PARM_DTL_TYP_CD VARCHAR(100) NOT NULL , 
PARM_NM VARCHAR(255) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PARM_TYP_CD VARCHAR(5) NOT NULL , 
TXT VARCHAR(4000) , 
PARM_DESC_TXT VARCHAR(4000) , 
CONS_CD VARCHAR(1) , 
APPL_NMSPC_CD VARCHAR(20) NOT NULL ,
constraint KRNS_PARM_T_PK_240 primary key (APPL_NMSPC_CD, NMSPC_CD, PARM_DTL_TYP_CD, PARM_NM) 
);

create table KRNS_PARM_TYP_T
(PARM_TYP_CD VARCHAR(5) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(40) , 
ACTV_IND CHAR(1) NOT NULL ,
constraint KRNS_PARM_TYP_T_PK_241 primary key (PARM_TYP_CD) 
);

create table KRNS_PESSIMISTIC_LOCK_T
(PESSIMISTIC_LOCK_ID DECIMAL(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
LOCK_DESC_TXT VARCHAR(4000) , 
DOC_HDR_ID VARCHAR(14) NOT NULL , 
GNRT_DT DATE NOT NULL , 
PRNCPL_ID VARCHAR(40) NOT NULL ,
constraint KRNS_PESSIMISTIC_LOC_PK_242 primary key (PESSIMISTIC_LOCK_ID) 
);

create table KRNS_SESN_DOC_T
(SESN_DOC_ID VARCHAR(40) NOT NULL , 
DOC_HDR_ID VARCHAR(14) NOT NULL , 
PRNCPL_ID VARCHAR(40) NOT NULL , 
IP_ADDR VARCHAR(60) NOT NULL , 
SERIALZD_DOC_FRM BLOB , 
LAST_UPDT_DT DATE , 
CONTENT_ENCRYPTED_IND CHAR(1) ,
constraint KRNS_SESN_DOC_T_PK_243 primary key (DOC_HDR_ID, IP_ADDR, PRNCPL_ID, SESN_DOC_ID) 
);

create table MM_ACCOUNTS_T
(ACCOUNTS_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ORDER_DOC_NBR VARCHAR(14) , 
AMOUNT_TYP VARCHAR(3) NOT NULL , 
FIN_COA_CD VARCHAR(2) NOT NULL , 
ACCOUNT_NBR VARCHAR(32) NOT NULL , 
SUB_ACCT_NBR VARCHAR(5) , 
FIN_OBJECT_CD VARCHAR(4) , 
FIN_SUB_OBJ_CD VARCHAR(6) , 
PROJECT_CD VARCHAR(10) , 
ACCOUNT_FIXED_AMT DECIMAL(19,4) NOT NULL , 
ORDER_DETAIL_ID DECIMAL(18) , 
DEPARTMENT_REFERENCE_TXT VARCHAR(15) , 
ACCOUNT_PCT DECIMAL(13,10) , 
SHOP_CART_DETAIL_ID DECIMAL(18) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ACCOUNTS_T_PK_244 primary key (ACCOUNTS_ID) 
);

create table MM_ACTION_T
(ACTION_CD VARCHAR(8) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ACTION_T_PK_245 primary key (ACTION_CD) 
);

create table MM_ADDITIONAL_COST_TYPE_T
(ADDITIONAL_COST_TYPE_CD VARCHAR(12) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ADDITIONAL_COST_T_PK_246 primary key (ADDITIONAL_COST_TYPE_CD) 
);

create table MM_ADDRESS_T
(ADDRESS_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ADDRESS_TYPE_CD VARCHAR(2) NOT NULL , 
ADDRESS_PROFILE_ID DECIMAL(18) NOT NULL , 
ADDRESS_NM VARCHAR(45) NOT NULL , 
ADDRESS_LN1 VARCHAR(45) NOT NULL , 
ADDRESS_LN2 VARCHAR(45) , 
ADDRESS_CITY_NM VARCHAR(45) NOT NULL , 
ADDRESS_STATE_CD VARCHAR(2) NOT NULL , 
ADDRESS_POSTAL_CD VARCHAR(20) , 
ADDRESS_COUNTRY_CD VARCHAR(2) NOT NULL , 
ADDRESS_PHONE_NBR VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ADDRESS_T_PK_247 primary key (ADDRESS_ID) 
);

create table MM_ADDRESS_TYPE_T
(ADDRESS_TYPE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ADDRESS_TYPE_T_PK_248 primary key (ADDRESS_TYPE_CD) 
);

create table MM_AGREEMENT_T
(AGREEMENT_NBR VARCHAR(50) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PO_ID DECIMAL(18) , 
VNDR_CONTR_GNRTD_ID DECIMAL(10) NOT NULL , 
VENDOR_NM VARCHAR(45) NOT NULL , 
PO_TOTAL_LIMIT DECIMAL(19,2) NOT NULL , 
AGREEMENT_LAG_DAYS DECIMAL(8) , 
AGREEMENT_USED_AMT DECIMAL(19,2) NOT NULL , 
AGREEMENT_BEGIN_DT DATE NOT NULL , 
AGREEMENT_END_DT DATE NOT NULL , 
VNDR_HDR_GNRTD_ID DECIMAL(10) , 
VNDR_DTL_ASND_ID DECIMAL(10) , 
B2B_IND VARCHAR(1) NOT NULL , 
GHOST_CARD_IND VARCHAR(1) NOT NULL , 
E_INVOICE_IND VARCHAR(1) , 
VNDR_CONTR_NM VARCHAR(20) , 
NOPRINT_IND VARCHAR(1) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_AGREEMENT_T_PK_249 primary key (AGREEMENT_NBR) 
);

create table MM_BACK_ORDER_T
(BACK_ORDER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PICK_LIST_LINE_ID DECIMAL(18) NOT NULL , 
BACK_ORDER_STOCK_QTY DECIMAL(18,4) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL , 
FILLED_IND VARCHAR(1) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL ,
constraint MM_BACK_ORDER_T_PK_250 primary key (BACK_ORDER_ID) 
);

create table MM_BATCH_CTRL_T
(JOB_NM VARCHAR(50) NOT NULL , 
JOB_DESC VARCHAR(200) , 
LAST_SUCCESS TIMESTAMP , 
LAST_ATTEMPT TIMESTAMP , 
CURRENT_STATUS VARCHAR(30) , 
ERROR_DETAIL VARCHAR(1000) ,
constraint MM_BATCH_CTRL_T_PK_251 primary key (JOB_NM) 
);

create table MM_BIN_T
(BIN_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ZONE_ID DECIMAL(18) NOT NULL , 
BIN_NBR VARCHAR(6) NOT NULL , 
SHELF_ID VARCHAR(2) , 
SHELF_ID_NBR VARCHAR(2) , 
MAXIMUM_SHELF_QTY DECIMAL(8) , 
BIN_HT DECIMAL(8,2) , 
BIN_WD DECIMAL(8,2) , 
BIN_LH DECIMAL(8,2) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_BIN_T_PK_252 primary key (BIN_ID) 
);

create table MM_CAROUSEL_LOG_T
(CAROUSEL_LINE_ID DECIMAL(18) NOT NULL , 
CAROUSEL_LINE_TYPE_CD VARCHAR(3) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CAROUSEL_LOG_T_PK_253 primary key (CAROUSEL_LINE_ID, CAROUSEL_LINE_TYPE_CD) 
);

create table MM_CATALOG_GROUP_T
(CATALOG_GROUP_CD VARCHAR(12) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_GROUP_NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_GROUP_T_PK_254 primary key (CATALOG_GROUP_CD) 
);

create table MM_CATALOG_IMAGE_T
(CATALOG_IMAGE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_IMAGE_NM VARCHAR(30) NOT NULL , 
CATALOG_IMAGE_URL VARCHAR(250) NOT NULL , 
CATALOG_ID DECIMAL(18) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_IMAGE_T_PK_255 primary key (CATALOG_IMAGE_ID) 
);

create table MM_CATALOG_ITEM_IMAGE_T
(CATALOG_ITEM_IMAGE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
CATALOG_IMAGE_ID DECIMAL(18) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_ITEM_IMAG_PK_256 primary key (CATALOG_ITEM_IMAGE_ID) 
);

create table MM_CATALOG_ITEM_MARKUP_T
(CATALOG_ITEM_MARKUP_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
MARKUP_CD VARCHAR(12) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_ITEM_MARK_PK_257 primary key (CATALOG_ITEM_MARKUP_ID) 
);

create table MM_CATALOG_ITEM_PENDING_T
(CATALOG_ITEM_PND_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_PENDING_DOC_NBR VARCHAR(14) NOT NULL , 
DISTRIBUTOR_NBR VARCHAR(30) , 
MANUFACTURER_NBR VARCHAR(30) , 
CATALOG_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
CATALOG_PRC DECIMAL(19,4) NOT NULL , 
CATALOG_DESC VARCHAR(400) NOT NULL , 
RECYCLED_IND VARCHAR(1) , 
UNSPSC_CD VARCHAR(10) , 
SHIPPING_WGT DECIMAL(8,2) , 
SHIPPING_HT DECIMAL(8,2) , 
SHIPPING_WD DECIMAL(8,2) , 
SHIPPING_LH DECIMAL(8,2) , 
TAXABLE_IND VARCHAR(1) , 
CATALOG_TIMESTAMP TIMESTAMP , 
CATALOG_GROUP_CD VARCHAR(12) , 
CATALOG_SUBGROUP_CD VARCHAR(12) , 
CATALOG_IMAGE_URL VARCHAR(250) , 
SPAID_ID VARCHAR(28) , 
CATALOG_SUBGROUP_DESC VARCHAR(80) , 
CATALOG_GROUP_NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_ITEM_PEND_PK_258 primary key (CATALOG_ITEM_PND_ID) 
);

create table MM_CATALOG_ITEM_T
(CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
DISTRIBUTOR_NBR VARCHAR(30) NOT NULL , 
MANUFACTURER_NBR VARCHAR(30) , 
CATALOG_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
CATALOG_PRC DECIMAL(19,4) , 
CATALOG_DESC VARCHAR(400) NOT NULL , 
RECYCLED_IND VARCHAR(1) , 
WILLCALL_IND VARCHAR(1) , 
UNSPSC_CD VARCHAR(10) , 
SHIPPING_WGT DECIMAL(8,2) , 
SHIPPING_HT DECIMAL(8,2) , 
SHIPPING_WD DECIMAL(8,2) , 
SHIPPING_LH DECIMAL(8,2) , 
CATALOG_ID DECIMAL(18) NOT NULL , 
STOCK_ID DECIMAL(18) , 
DISPLAYABLE_IND VARCHAR(1) NOT NULL , 
CATALOG_ITEM_PND_ID DECIMAL(18) , 
SUBSTITUTE_DISTRIBUTOR_NBR VARCHAR(30) , 
TAXABLE_IND VARCHAR(1) , 
SPAID_ID VARCHAR(28) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_ITEM_T_PK_259 primary key (CATALOG_ITEM_ID) 
);

create table MM_CATALOG_PENDING_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_CD VARCHAR(2) NOT NULL , 
CATALOG_DESC VARCHAR(200) , 
CATALOG_BEGIN_DT DATE , 
CATALOG_END_DT DATE , 
PRIORITY_NBR DECIMAL(8) , 
AGREEMENT_NBR VARCHAR(15) , 
CATALOG_UPLOAD_STATUS VARCHAR(12) , 
CATALOG_TIMESTAMP TIMESTAMP , 
CATALOG_FILE CLOB , 
BATCH_LOG CLOB , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_PENDING_D_PK_260 primary key (FDOC_NBR) 
);

create table MM_CATALOG_SUBGROUP_ITEM_T
(CATALOG_SUBGROUP_ITEM_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
CATALOG_SUBGROUP_ID DECIMAL(18) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_SUBGROUP_PK_261 primary key (CATALOG_SUBGROUP_ITEM_ID) 
);

create table MM_CATALOG_SUBGROUP_T
(CATALOG_SUBGROUP_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_GROUP_CD VARCHAR(12) NOT NULL , 
CATALOG_SUBGROUP_CD VARCHAR(12) NOT NULL , 
CATALOG_SUBGROUP_DESC VARCHAR(80) NOT NULL , 
PRIOR_CATALOG_SUBGROUP_ID DECIMAL(18) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_SUBGROUP_PK_262 primary key (CATALOG_SUBGROUP_ID) 
);

create table MM_CATALOG_T
(CATALOG_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_CD VARCHAR(2) NOT NULL , 
CATALOG_DESC VARCHAR(200) NOT NULL , 
CATALOG_BEGIN_DT DATE , 
CATALOG_END_DT DATE , 
CATALOG_TYPE_CD VARCHAR(1) NOT NULL , 
PRIORITY_NBR DECIMAL(8) , 
AGREEMENT_NBR VARCHAR(15) , 
CURRENT_IND VARCHAR(1) NOT NULL , 
CATALOG_PENDING_DOC_NBR VARCHAR(14) , 
WAREHOUSE_CD VARCHAR(2) , 
DEFAULT_OBJECT_CD VARCHAR(4) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_T_PK_263 primary key (CATALOG_ID) 
);

create table MM_CATALOG_TYPE_T
(CATALOG_TYPE_CD VARCHAR(1) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CATALOG_TYPE_T_PK_264 primary key (CATALOG_TYPE_CD) 
);

create table MM_CHECKIN_CYLINDER_T
(CHECKIN_CYLINDER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CHECKIN_DETAIL_ID DECIMAL(18) , 
CHECKIN_SERIAL_NBR VARCHAR(80) NOT NULL , 
RETURN_DETAIL_ID DECIMAL(18) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CHECKIN_CYLINDER_PK_265 primary key (CHECKIN_CYLINDER_ID) 
);

create table MM_CHECKIN_DETAIL_T
(CHECKIN_DETAIL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CHECKIN_DOC_NBR VARCHAR(14) NOT NULL , 
ACCEPTED_ITEM_QTY DECIMAL(19,4) NOT NULL , 
REJECTED_ITEM_QTY DECIMAL(19,4) NOT NULL , 
PO_ID DECIMAL(9) , 
ORDER_DETAIL_ID DECIMAL(18) NOT NULL , 
STOCK_ID DECIMAL(18) , 
BIN_ID DECIMAL(18) , 
RETURN_UNIT_OF_ISSUE_CD VARCHAR(10) , 
RETURN_DETAIL_STATUS_CD VARCHAR(4) , 
CLOSED_IND VARCHAR(1) , 
STOCK_PERISHABLE_DT TIMESTAMP , 
CORRECTED_CHECKIN_DETAIL_ID DECIMAL(18) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CHECKIN_DETAIL_T_PK_266 primary key (CHECKIN_DETAIL_ID) 
);

create table MM_CHECKIN_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ORDER_DOC_NBR VARCHAR(14) NOT NULL , 
VENDOR_REF_NBR VARCHAR(45) , 
VENDOR_SHIPMENT_NBR VARCHAR(45) , 
WAREHOUSE_CD VARCHAR(2) , 
FINAL_IND VARCHAR(1) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CHECKIN_DOC_T_PK_267 primary key (FDOC_NBR) 
);

create table MM_COST_CODE_T
(COST_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_COST_CODE_T_PK_268 primary key (COST_CD) 
);

create table MM_CPTL_AST_INFO_DTL_T
(ORDR_DTL_ID DECIMAL(18) NOT NULL , 
CPTL_AST_INFO_DTL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CAMPUS_CD VARCHAR(2) , 
BLDG_CD VARCHAR(10) , 
BLDG_ROOM_NBR VARCHAR(8) , 
BLDG_SUB_ROOM_NBR VARCHAR(2) , 
CPTLAST_TAG_NBR VARCHAR(8) , 
CPTLAST_SERIAL_NBR VARCHAR(25) ,
constraint MM_CPTL_AST_INFO_DTL_PK_269 primary key (CPTL_AST_INFO_DTL_ID) 
);

create table MM_CPTL_AST_INFO_T
(ORDR_DTL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
VNDR_HDR_GNRTD_ID DECIMAL(10) , 
VNDR_DTL_ASND_ID DECIMAL(10) , 
CPTLAST_NBR DECIMAL(12) , 
CPTLAST_TYP_CD VARCHAR(7) , 
CPTLAST_MFR_NM VARCHAR(40) , 
CPTLAST_DESC VARCHAR(2000) , 
CPTLAST_MFRMDL_NBR VARCHAR(25) , 
VNDR_NM VARCHAR(45) ,
constraint MM_CPTL_AST_INFO_T_PK_270 primary key (ORDR_DTL_ID) 
);

create table MM_CREDIT_MEMO_EXPECTED_T
(CREDIT_MEMO_EXPECTED_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
RETURN_DETAIL_ID DECIMAL(18) NOT NULL , 
CM_RECEIVED_IND VARCHAR(1) NOT NULL , 
CM_EXPECTED_CREATE_DT TIMESTAMP NOT NULL , 
CHECKIN_DETAIL_ID DECIMAL(18) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CREDIT_MEMO_EXPEC_PK_271 primary key (CREDIT_MEMO_EXPECTED_ID) 
);

create table MM_CUSTOMER_FAV_DETAIL_T
(CUSTOMER_FAV_DETAIL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CUSTOMER_FAV_ID DECIMAL(18) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CUSTOMER_FAV_DETA_PK_272 primary key (CUSTOMER_FAV_DETAIL_ID) 
);

create table MM_CUSTOMER_FAV_HEADER_T
(CUSTOMER_FAV_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PRNCPL_NM VARCHAR(100) NOT NULL , 
CUSTOMER_FAV_NM VARCHAR(40) NOT NULL , 
CUSTOMER_FAV_SHARE_IND VARCHAR(1) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CUSTOMER_FAV_HEAD_PK_273 primary key (CUSTOMER_FAV_ID) 
);

create table MM_CUSTOMER_T
(PRNCPL_NM VARCHAR(100) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
FIRST_NM VARCHAR(45) , 
CUSTOMER_PASSWORD VARCHAR(200) , 
LAST_NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CUSTOMER_T_PK_274 primary key (PRNCPL_NM) 
);

create table MM_CYCLE_COUNT_T
(CYCLE_CNT_CD VARCHAR(1) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CYCLE_CNT_DESC VARCHAR(80) , 
TIMES_PER_YEAR_NBR DECIMAL(8) NOT NULL , 
TOLERANCE_AMT DECIMAL(19,4) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CYCLE_COUNT_T_PK_275 primary key (CYCLE_CNT_CD) 
);

create table MM_CYLINDER_GAS_T
(CYLINDER_GAS_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CYLINDER_GAS_DESC VARCHAR(80) , 
DAILY_DEMURAGE_PRC DECIMAL(18,4) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CYLINDER_GAS_T_PK_276 primary key (CYLINDER_GAS_CD) 
);

create table MM_CYLINDER_T
(CYLINDER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
CYLINDER_SERIAL_NBR VARCHAR(80) NOT NULL , 
ISSUED_DT DATE , 
LAST_CHARGE_DT DATE , 
RETURN_DT DATE , 
PICK_LIST_LINE_ID DECIMAL(18) , 
CHECKIN_DETAIL_ID DECIMAL(18) , 
RETURN_DETAIL_ID DECIMAL(18) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_CYLINDER_T_PK_277 primary key (CYLINDER_ID) 
);

create table MM_DELIVERY_REASON_T
(DELIVERY_REASON_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_DELIVERY_REASON_T_PK_278 primary key (DELIVERY_REASON_CD) 
);

create table MM_DISPOSITION_T
(DISPOSITION_CD VARCHAR(12) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_DISPOSITION_T_PK_279 primary key (DISPOSITION_CD) 
);

create table MM_DOT_HAZARDOUS_T
(DOT_HAZARDOUS_CD VARCHAR(5) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
DRIVER_MANIFEST_CD VARCHAR(2) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_DOT_HAZARDOUS_T_PK_280 primary key (DOT_HAZARDOUS_CD) 
);

create table MM_DRIVER_MANIFEST_T
(DRIVER_MANIFEST_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_DRIVER_MANIFEST_T_PK_281 primary key (DRIVER_MANIFEST_CD) 
);

create table MM_EHS_CONTAINER_T
(EHS_CONTAINER_CD VARCHAR(6) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_EHS_CONTAINER_T_PK_282 primary key (EHS_CONTAINER_CD) 
);

create table MM_EHS_HAZARDOUS_STATE_T
(EHS_HAZARDOUS_STATE_CD VARCHAR(1) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_EHS_HAZARDOUS_STA_PK_283 primary key (EHS_HAZARDOUS_STATE_CD) 
);

create table MM_EHS_HAZARDOUS_T
(EHS_HAZARDOUS_CD VARCHAR(3) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_EHS_HAZARDOUS_T_PK_284 primary key (EHS_HAZARDOUS_CD) 
);

create table MM_FURNITURE_T
(FURNITURE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
DESIGN_NBR VARCHAR(10) , 
SHOP_CART_ID DECIMAL(18) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_FURNITURE_T_PK_285 primary key (FURNITURE_ID) 
);

create table MM_HAZARDOUS_MATERIEL_T
(HAZARDOUS_MATERIEL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
HAZARDOUS_UN_CD VARCHAR(12) , 
EHS_HAZARDOUS_CD VARCHAR(3) , 
EHS_CONTAINER_CD VARCHAR(6) , 
EHS_CAS_NBR VARCHAR(20) , 
EHS_HAZARDOUS_STATE_CD VARCHAR(1) , 
EHS_UNIT_OF_ISSUE_CD VARCHAR(10) , 
EHS_CONVERSION_UNIT_FACTOR DECIMAL(8,5) , 
DOT_HAZARDOUS_CD VARCHAR(5) , 
TYPE_OF_USE VARCHAR(10) , 
HAZARDOUS_PRESSURE DECIMAL(10,3) , 
HAZARDOUS_TEMPERATURE DECIMAL(10,3) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_HAZARDOUS_MATERIE_PK_286 primary key (HAZARDOUS_MATERIEL_ID) 
);

create table MM_HAZARDOUS_UN_T
(HAZARDOUS_UN_CD VARCHAR(10) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
HAZARDOUS_UN_DESC VARCHAR(255) , 
HAZARDOUS_UN_STD_UNIT VARCHAR(5) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_HAZARDOUS_UN_T_PK_287 primary key (HAZARDOUS_UN_CD) 
);

create table MM_MARKUP_T
(MARKUP_CD VARCHAR(12) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
MARKUP_NM VARCHAR(40) , 
MARKUP_RT DECIMAL(8,4) , 
WAREHOUSE_CD VARCHAR(2) , 
MARKUP_COA_CD VARCHAR(2) , 
MARKUP_ORG_CD VARCHAR(32) , 
MARKUP_ACCOUNT_NBR VARCHAR(32) , 
MARKUP_FIXED_AMT DECIMAL(8,2) , 
MARKUP_BEGIN_DT DATE , 
MARKUP_END_DT DATE , 
MARKUP_TYPE_CD VARCHAR(2) , 
MARKUP_FROM_QTY DECIMAL(8) , 
MARKUP_TO_QTY DECIMAL(8) , 
CATALOG_GROUP_CD VARCHAR(12) , 
CATALOG_SUBGROUP_ID DECIMAL(18) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_MARKUP_T_PK_288 primary key (MARKUP_CD) 
);

create table MM_MARKUP_TYPE_T
(MARKUP_TYPE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_MARKUP_TYPE_T_PK_289 primary key (MARKUP_TYPE_CD) 
);

create table MM_ORDER_DETAIL_T
(ORDER_DETAIL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ORDER_DOC_NBR VARCHAR(14) NOT NULL , 
SALES_INSTANCE_ID DECIMAL(18) , 
ORDER_DETAIL_STATUS_CD VARCHAR(4) NOT NULL , 
SHOP_CART_DETAIL_ID VARCHAR(14) , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
ORDER_ITEM_QTY DECIMAL(11,4) NOT NULL , 
STOCK_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
ORDER_ITEM_COST_AMT DECIMAL(19,4) NOT NULL , 
ORDER_ITEM_PRICE_AMT DECIMAL(19,4) NOT NULL , 
ORDER_ITEM_MARKUP_AMT DECIMAL(19,4) NOT NULL , 
ORDER_ITEM_TAX_AMT DECIMAL(19,4) NOT NULL , 
ORDER_ITEM_ADDL_CST_AMT DECIMAL(19,4) , 
ORDER_ITEM_DETAIL_DESC VARCHAR(400) NOT NULL , 
DISTRIBUTOR_NBR VARCHAR(30) , 
SHIPPING_WGT DECIMAL(8,2) , 
SHIPPING_HT DECIMAL(8,2) , 
SHIPPING_WD DECIMAL(8,2) , 
SHIPPING_LH DECIMAL(8,2) , 
WILLCALL_IND VARCHAR(1) , 
VENDOR_HEADER_GENERATED_ID DECIMAL(10) , 
VENDOR_DETAIL_ASSIGNED_ID DECIMAL(10) , 
VENDOR_NM VARCHAR(45) , 
PO_ID DECIMAL(9) , 
ITM_LN_NBR DECIMAL(3) , 
SPAID_ID VARCHAR(28) , 
ADDITIONAL_COST_TYPE_CD VARCHAR(12) , 
AGREEMENT_ORDER_ITEM_QTY DECIMAL(11,4) , 
AGREEMENT_UNIT_OF_ISSUE_CD VARCHAR(10) , 
ORDER_EXPECTED_DT TIMESTAMP , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ORDER_DETAIL_T_PK_290 primary key (ORDER_DETAIL_ID) 
);

create table MM_ORDER_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ORDER_ID DECIMAL(18) NOT NULL , 
SHOP_CART_ID DECIMAL(18) , 
ORDER_TYPE_CD VARCHAR(6) NOT NULL , 
RECURRING_ORDER_IND VARCHAR(1) , 
RECURRING_ORDER_ID DECIMAL(18) , 
VENDOR_HEADER_GENERATED_ID DECIMAL(10) , 
VENDOR_DETAIL_ASSIGNED_ID DECIMAL(10) , 
VENDOR_NM VARCHAR(45) , 
CUSTOMER_PROFILE_ID DECIMAL(18) NOT NULL , 
ORDER_DOC_STATUS_CD VARCHAR(4) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
CAMPUS_CD VARCHAR(2) , 
DELIVERY_BUILDING_CD VARCHAR(10) , 
DELIVERY_BUILDING_RM_NBR VARCHAR(8) , 
DELIVERY_DEPARTMENT_NM VARCHAR(45) , 
DELIVERY_INSTRUCTION_TXT VARCHAR(255) , 
BILLING_ADDRESS_ID DECIMAL(18) , 
SHIPPING_ADDRESS_ID DECIMAL(18) , 
AGREEMENT_NBR VARCHAR(15) , 
ORDER_CREATE_DT TIMESTAMP , 
REQS_ID DECIMAL(8) , 
AR_ID DECIMAL(8) , 
PROFILE_TYP_CD VARCHAR(10) , 
DEFAULT_OBJECT_CD VARCHAR(4) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ORDER_DOC_T_PK_291 primary key (FDOC_NBR) 
);

create table MM_ORDER_STATUS_T
(ORDER_STATUS_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ORDER_STATUS_T_PK_292 primary key (ORDER_STATUS_CD) 
);

create table MM_ORDER_TYPE_T
(ORDER_TYPE_CD VARCHAR(6) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ORDER_TYPE_T_PK_293 primary key (ORDER_TYPE_CD) 
);

create table MM_PACK_LIST_ANNOUNCEMENT_T
(PACK_LIST_ANNOUNCEMENT_CD VARCHAR(8) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PACK_LIST_ANNOUNCEMENT_DESC VARCHAR(200) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PACK_LIST_ANNOUNC_PK_294 primary key (PACK_LIST_ANNOUNCEMENT_CD) 
);

create table MM_PACK_LIST_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PACK_STATUS_CD VARCHAR(4) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PACK_LIST_DOC_T_PK_295 primary key (FDOC_NBR) 
);

create table MM_PACK_LIST_LINE_T
(PACK_LIST_LINE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PACK_LIST_LINE_NBR DECIMAL(8) NOT NULL , 
PACK_LIST_DOC_NBR VARCHAR(14) NOT NULL , 
PICK_LIST_LINE_ID DECIMAL(18) NOT NULL , 
ROUTE_CD VARCHAR(2) NOT NULL , 
DELIVERY_CAMPUS_CD VARCHAR(2) NOT NULL , 
DELIVERY_BUILDING_CD VARCHAR(10) NOT NULL , 
DELIVERY_BUILDING_RM_NBR VARCHAR(8) , 
DELIVERY_BUILDING_NM VARCHAR(45) , 
DELIVERY_DEPARTMENT_NM VARCHAR(45) , 
DELIVERY_INSTRUCTION_TXT VARCHAR(255) , 
STOP_CD VARCHAR(2) NOT NULL , 
NUMBER_OF_CARTONS DECIMAL(8) NOT NULL , 
DRIVER_LOG_NBR DECIMAL(8) NOT NULL , 
DRIVER_PRNCPL_ID VARCHAR(100) , 
DELIVERY_REASON_CD VARCHAR(4) NOT NULL , 
DELIVERY_DT DATE , 
PACK_PRNCPL_ID VARCHAR(100) , 
PACK_DT DATE , 
VERIFY_PRNCPL_ID VARCHAR(100) , 
DEPARTMENT_RECEIVED_BY_NM VARCHAR(45) , 
PACK_STATUS_CD VARCHAR(4) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PACK_LIST_LINE_T_PK_296 primary key (PACK_LIST_LINE_ID) 
);

create table MM_PACK_STATUS_CODE_T
(PACK_STATUS_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PACK_STATUS_CODE_PK_297 primary key (PACK_STATUS_CD) 
);

create table MM_PICK_LIST_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
SORT_CD VARCHAR(12) , 
MAX_ORDERS_QTY DECIMAL(8) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PICK_LIST_DOC_T_PK_298 primary key (FDOC_NBR) 
);

create table MM_PICK_LIST_LINE_T
(PICK_LIST_LINE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PICK_LIST_DOC_NBR VARCHAR(14) , 
PICK_TICKET_NBR DECIMAL(18) , 
PICK_TUB_NBR DECIMAL(8) , 
SALES_INSTANCE_ID DECIMAL(8) NOT NULL , 
ORDER_DETAIL_ID DECIMAL(18) NOT NULL , 
BIN_ID DECIMAL(18) , 
STOCK_ID DECIMAL(18) NOT NULL , 
STOCK_QTY DECIMAL(11,4) NOT NULL , 
PICK_STOCK_QTY DECIMAL(11,4) , 
BACK_ORDER_QTY DECIMAL(11,4) , 
BACK_ORDER_ID DECIMAL(18) , 
PICK_STATUS_CD VARCHAR(4) , 
ROUTE_CD VARCHAR(2) , 
CHARGE_DOC_NBR VARCHAR(14) , 
CHARGE_DOC_ITM_NBR DECIMAL(7) , 
PICK_LIST_LINE_CREATED_DT TIMESTAMP NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PICK_LIST_LINE_T_PK_299 primary key (PICK_LIST_LINE_ID) 
);

create table MM_PICK_STATUS_CODE_T
(PICK_STATUS_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PICK_STATUS_CODE_PK_300 primary key (PICK_STATUS_CD) 
);

create table MM_PICK_TICKET_T
(PICK_TICKET_NBR DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
PICK_LIST_DOC_NBR VARCHAR(14) NOT NULL , 
PICK_STATUS_CD VARCHAR(4) NOT NULL , 
FILE_NM VARCHAR(255) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PICK_TICKET_T_PK_301 primary key (PICK_TICKET_NBR) 
);

create table MM_PICK_VERIFY_DOC_T
(FDOC_NBR VARCHAR(36) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PICK_TICKET_NBR DECIMAL(18) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PICK_VERIFY_DOC_T_PK_302 primary key (FDOC_NBR) 
);

create table MM_PROFILE_T
(PROFILE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PROFILE_NM VARCHAR(45) NOT NULL , 
CUSTOMER_PRNCPL_NM VARCHAR(100) NOT NULL , 
PROFILE_EMAIL VARCHAR(200) , 
PROFILE_PHONE_NBR VARCHAR(45) , 
DELIVERY_BUILDING_CD VARCHAR(10) , 
DELIVERY_BUILDING_RM_NBR VARCHAR(8) , 
BILLING_BUILDING_CD VARCHAR(10) , 
ORG_CD VARCHAR(32) , 
CAMPUS_CD VARCHAR(2) , 
FIN_COA_CD VARCHAR(2) , 
ACCOUNT_NBR VARCHAR(32) , 
SUB_ACCT_NBR VARCHAR(5) , 
PROFILE_DEFAULT_IND VARCHAR(1) , 
PROJECT_CD VARCHAR(10) , 
NOTIFY_IND VARCHAR(1) , 
PERSONAL_IND VARCHAR(1) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_PROFILE_T_PK_303 primary key (PROFILE_ID) 
);

create table MM_RECONCILIATION_T
(TRANSACTION_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) , 
ORDER_DOC_NBR VARCHAR(14) NOT NULL , 
ORDER_LINE_NBR DECIMAL(8) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) , 
ITEM_UNIT_OF_ISSUE_CD VARCHAR(10) , 
ITEM_DETAIL_DESC VARCHAR(400) , 
SHIPPED_ITEM_QTY DECIMAL(11,4) , 
ITEM_PRC DECIMAL(19,4) , 
ITEM_TAX_AMT DECIMAL(19,4) , 
ITEM_TOTAL_AMT DECIMAL(19,4) , 
RECEIVED_CD VARCHAR(1) , 
RECEIVED_COMMENTS VARCHAR(300) , 
CUSTOMER_ID VARCHAR(12) , 
CHECKIN_DT DATE , 
SHIP_DT DATE , 
MATCH_IND VARCHAR(1) , 
GL_PROCESS_IND VARCHAR(1) , 
INVOICE_NBR VARCHAR(15) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RECONCILIATION_T_PK_304 primary key (TRANSACTION_ID) 
);

create table MM_RECURRING_ORDER_T
(RECURRING_ORDER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
TIMES_PER_YR DECIMAL(8) , 
NO_END_DATE_IND VARCHAR(1) NOT NULL , 
START_DT DATE NOT NULL , 
END_DT DATE , 
LAST_RECURRING_DT DATE , 
NEXT_RECURRING_DT DATE , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RECURRING_ORDER_T_PK_305 primary key (RECURRING_ORDER_ID) 
);

create table MM_RENTAL_T
(RENTAL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
RENTAL_NBR VARCHAR(80) NOT NULL , 
CHECKIN_DOC_NBR VARCHAR(14) NOT NULL , 
ORDER_DOC_NBR VARCHAR(14) , 
ISSUED_DT DATE , 
LAST_CHARGE_DT DATE , 
RETURN_DT DATE , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RENTAL_T_PK_306 primary key (RENTAL_ID) 
);

create table MM_RESTRICTED_ROUTE_CODE_T
(RESTRICTED_ROUTE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RESTRICTED_ROUTE_PK_307 primary key (RESTRICTED_ROUTE_CD) 
);

create table MM_RETURN_DETAIL_T
(RETURN_DETAIL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
RETURN_DOC_NBR VARCHAR(14) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) NOT NULL , 
RETURN_QTY DECIMAL(11,4) NOT NULL , 
RETURN_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
RETURN_ITEM_PRC DECIMAL(19,4) NOT NULL , 
RETURN_ITEM_DETAIL_DESC VARCHAR(400) NOT NULL , 
RETURN_PCT DECIMAL(8) NOT NULL , 
RETURN_CREDIT_AMT DECIMAL(19,4) NOT NULL , 
VENDOR_HEADER_GENERATED_ID DECIMAL(10) , 
VENDOR_DETAIL_ASSIGNED_ID DECIMAL(10) , 
VENDOR_NM VARCHAR(45) , 
ORDER_LINE_NBR DECIMAL(8) , 
RETURN_DETAIL_STATUS_CD VARCHAR(4) , 
RETURN_TYPE_CD VARCHAR(8) , 
VENDOR_CREDIT_IND VARCHAR(1) , 
VENDOR_RESHIP_IND VARCHAR(1) , 
VENDOR_DISPOSITION_IND VARCHAR(1) , 
ACTION_CD VARCHAR(8) , 
DISPOSITION_CD VARCHAR(12) , 
REQS_ID DECIMAL(8) , 
PO_ID DECIMAL(9) , 
ORDER_DETAIL_ID DECIMAL(18) , 
CHECKIN_DETAIL_ID DECIMAL(18) , 
BIN_ID DECIMAL(18) , 
DEPARTMENT_CREDIT_IND VARCHAR(1) , 
CREDIT_DOC_NBR VARCHAR(14) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RETURN_DETAIL_T_PK_308 primary key (RETURN_DETAIL_ID) 
);

create table MM_RETURN_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
RETURN_ORDER_ID VARCHAR(14) NOT NULL , 
RETURN_DOC_STATUS_CD VARCHAR(4) NOT NULL , 
VENDOR_HEADER_GENERATED_ID DECIMAL(10) , 
VENDOR_DETAIL_ASSIGNED_ID DECIMAL(10) , 
VENDOR_NM VARCHAR(45) , 
RETRIEVAL_BUILDING_CD VARCHAR(10) , 
RETRIEVAL_BUILDING_RM_NBR VARCHAR(8) , 
RETRIEVAL_INSTRUCTION_TXT VARCHAR(255) , 
BILLING_BUILDING_CD VARCHAR(10) , 
RETURN_TYPE_CD VARCHAR(4) NOT NULL , 
VENDOR_CREDIT_IND VARCHAR(1) , 
VENDOR_RESHIP_IND VARCHAR(1) , 
VENDOR_DISPOSITION_IND VARCHAR(1) , 
CUSTOMER_PROFILE_ID DECIMAL(18) , 
VENDOR_REF_NBR VARCHAR(45) , 
ORDER_DOC_NBR VARCHAR(14) , 
CHECKIN_DOC_NBR VARCHAR(14) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RETURN_DOC_T_PK_309 primary key (FDOC_NBR) 
);

create table MM_RETURN_STATUS_CODE_T
(RETURN_STATUS_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
CUSTOMER_VENDOR_RETURN_IND VARCHAR(1) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RETURN_STATUS_COD_PK_310 primary key (RETURN_STATUS_CD) 
);

create table MM_RETURN_TYPE_T
(RETURN_TYPE_CD VARCHAR(8) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_RETURN_TYPE_T_PK_311 primary key (RETURN_TYPE_CD) 
);

create table MM_ROUTE_T
(ROUTE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
DRIVER_PRNCPL_ID VARCHAR(100) , 
DRIVER_MANIFEST_CD VARCHAR(2) , 
RESTRICTED_ROUTE_CD VARCHAR(2) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ROUTE_T_PK_312 primary key (ROUTE_CD) 
);

create table MM_SALES_INSTANCE_T
(SALES_INSTANCE_ID DECIMAL(8) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ORDER_DOC_NBR VARCHAR(14) NOT NULL , 
ORDER_TYPE_CD VARCHAR(6) NOT NULL , 
ORDER_SALES_STATUS_CD VARCHAR(4) NOT NULL , 
ORDER_LINE_TOTAL_AMT DECIMAL(19,2) , 
ORDER_TAXABLE_AMT DECIMAL(19,2) , 
ORDER_TOTAL_AMT DECIMAL(19,2) , 
CUSTOMER_PROFILE_ID DECIMAL(18) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_SALES_INSTANCE_T_PK_313 primary key (SALES_INSTANCE_ID) 
);

create table MM_SEARCH_LOG_T
(CUSTOMER_PRNCPL_ID VARCHAR(100) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
SEARCH_FLD VARCHAR(45) NOT NULL , 
STOCK_DISTRIBUTION_NBR VARCHAR(30) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_SEARCH_LOG_T_PK_314 primary key (CUSTOMER_PRNCPL_ID) 
);

create table MM_SHOP_CART_DETAIL_T
(SHOP_CART_DETAIL_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
SHOP_CART_ID DECIMAL(18) NOT NULL , 
CATALOG_ITEM_ID DECIMAL(18) , 
WILLCALL_IND VARCHAR(1) , 
SHOP_CART_ITEM_QTY DECIMAL(11,4) NOT NULL , 
ITEM_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
SHOP_CART_ITEM_COST_AMT DECIMAL(19,4) NOT NULL , 
SHOP_CART_ITEM_PRICE_AMT DECIMAL(19,4) NOT NULL , 
SHOP_CART_ITEM_MARKUP_AMT DECIMAL(19,4) NOT NULL , 
SHOP_CART_ITEM_TAX_AMT DECIMAL(19,4) NOT NULL , 
SHOP_CART_ITEM_ADDL_CST_AMT DECIMAL(19,4) , 
SHOP_CART_ITEM_DETAIL_DESC VARCHAR(4000) NOT NULL , 
SHIPPING_WGT DECIMAL(8,2) , 
SHIPPING_HT DECIMAL(8,2) , 
SHIPPING_WD DECIMAL(8,2) , 
SHIPPING_LH DECIMAL(8,2) , 
VENDOR_HEADER_GENERATED_ID DECIMAL(10) , 
VENDOR_DETAIL_ASSIGNED_ID DECIMAL(10) , 
VENDOR_NM VARCHAR(45) , 
SPAID_ID VARCHAR(28) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_SHOP_CART_DETAIL_PK_315 primary key (SHOP_CART_DETAIL_ID) 
);

create table MM_SHOP_CART_DTL_ADDL_COST_T
(SHOP_CART_DTL_ADDL_COST_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
SHOP_CART_DETAIL_ID DECIMAL(18) NOT NULL , 
ADDITIONAL_COST_TYPE_CD VARCHAR(12) NOT NULL , 
ADDITIONAL_CST DECIMAL(19,4) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_SHOP_CART_DTL_ADD_PK_316 primary key (SHOP_CART_DTL_ADDL_COST_ID) 
);

create table MM_SHOP_CART_T
(SHOP_CART_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CUSTOMER_PROFILE_ID DECIMAL(18) NOT NULL , 
SHOP_CART_HEADER_NM VARCHAR(40) , 
BILLING_ADDRESS_ID DECIMAL(18) , 
SHIPPING_ADDRESS_ID DECIMAL(18) , 
DELIVERY_BUILDING_CD VARCHAR(10) , 
DELIVERY_BUILDING_RM_NBR VARCHAR(8) , 
DELIVERY_INSTRUCTION_TXT VARCHAR(255) , 
ORDERED_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_SHOP_CART_T_PK_317 primary key (SHOP_CART_ID) 
);

create table MM_STOCK_ATTRIBUTE_CODE_T
(STOCK_ATTRIBUTE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_ATTRIBUTE_C_PK_318 primary key (STOCK_ATTRIBUTE_CD) 
);

create table MM_STOCK_ATTRIBUTE_T
(STOCK_ATTRIBUTE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ATTRIBUTE_CD VARCHAR(2) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_ATTRIBUTE_T_PK_319 primary key (STOCK_ATTRIBUTE_ID) 
);

create table MM_STOCK_BALANCE_T
(STOCK_BALANCE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) , 
BIN_ID DECIMAL(18) NOT NULL , 
QTY_ON_HAND DECIMAL(8) NOT NULL , 
LAST_CHECKIN_DT DATE NOT NULL , 
LAST_CNT_DT DATE , 
STOCK_PERISHABLE_DT TIMESTAMP , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_BALANCE_T_PK_320 primary key (BIN_ID) 
);

create table MM_STOCK_COST_T
(STOCK_COST_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
COST_CD VARCHAR(2) NOT NULL , 
STOCK_CST DECIMAL(19,4) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_COST_T_PK_321 primary key (STOCK_COST_ID) 
);

create table MM_STOCK_COUNT_T
(STOCK_COUNT_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
BIN_ID DECIMAL(18) NOT NULL , 
WORKSHEET_COUNT_DOC_NBR VARCHAR(14) , 
WORKSHEET_PRNCPL_ID VARCHAR(100) NOT NULL , 
BEFORE_ITEM_QTY DECIMAL(11,4) , 
BEFORE_ITEM_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
ORIGINAL_DT TIMESTAMP NOT NULL , 
STOCK_COUNT_ITEM_QTY DECIMAL(11,4) , 
STOCK_TRANS_REASON_CD VARCHAR(8) , 
STOCK_COUNT_NOTE VARCHAR(200) , 
TIMES_COUNTED DECIMAL(8) , 
REPRINT_IND VARCHAR(1) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_COUNT_T_PK_322 primary key (STOCK_COUNT_ID) 
);

create table MM_STOCK_HISTORY_T
(STOCK_HISTORY_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_TRANS_REASON_CD VARCHAR(8) NOT NULL , 
BEFORE_STOCK_QTY DECIMAL(11,4) NOT NULL , 
BEFORE_STOCK_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
BEFORE_STOCK_CST DECIMAL(19,4) NOT NULL , 
TRANS_STOCK_QTY DECIMAL(11,4) , 
TRANS_STOCK_UNIT_OF_ISSUE_CD VARCHAR(10) , 
TRANS_STOCK_CST DECIMAL(19,4) , 
AFTER_STOCK_QTY DECIMAL(11,4) NOT NULL , 
AFTER_STOCK_UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
AFTER_STOCK_CST DECIMAL(19,4) NOT NULL , 
HISTORY_TRANS_TIMESTAMP TIMESTAMP NOT NULL , 
CHECKIN_DOC_NBR VARCHAR(14) , 
PICK_VERIFY_DOC_NBR VARCHAR(14) , 
RETURN_DOC_NBR VARCHAR(14) , 
WORKSHEET_COUNT_DOC_NBR VARCHAR(14) , 
STOCK_COST_ID DECIMAL(18) , 
STOCK_ID DECIMAL(18) NOT NULL , 
BIN_ID DECIMAL(18) NOT NULL , 
RESIDUAL_TAG VARCHAR(20) , 
PRNCPL_NM VARCHAR(100) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_HISTORY_T_PK_323 primary key (STOCK_HISTORY_ID) 
);

create table MM_STOCK_PACK_NOTE_T
(STOCK_PACK_NOTE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
PACK_LIST_ANNOUNCEMENT_CD VARCHAR(8) NOT NULL , 
STOCK_ID DECIMAL(18) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_PACK_NOTE_T_PK_324 primary key (STOCK_PACK_NOTE_ID) 
);

create table MM_STOCK_T
(STOCK_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
STOCK_DISTRIBUTOR_NBR VARCHAR(30) NOT NULL , 
STOCK_DESC VARCHAR(400) NOT NULL , 
ACTV_IND VARCHAR(1) , 
TAXABLE_IND VARCHAR(1) , 
SURCHARGE_IND VARCHAR(1) , 
RECYCLED_IND VARCHAR(1) , 
PERISHABLE_IND VARCHAR(1) , 
OBSOLETE_IND VARCHAR(1) , 
WILLCALL_IND VARCHAR(1) , 
STOCK_TYPE_CD VARCHAR(2) , 
RESTRICTED_ROUTE_CD VARCHAR(2) , 
MANUFACTURER_NBR VARCHAR(30) , 
AGREEMENT_DISTRIBUTOR_NBR VARCHAR(30) , 
CYCLE_CNT_CD VARCHAR(1) , 
SALES_UNIT_OF_ISSUE_CD VARCHAR(10) , 
SALES_UNIT_OF_ISSUE_RT DECIMAL(8,5) , 
BUY_UNIT_OF_ISSUE_CD VARCHAR(10) , 
BUY_UNIT_OF_ISSUE_RT DECIMAL(8,5) , 
UPC_CD VARCHAR(30) , 
PACKAGING_UNIT_DESC VARCHAR(80) , 
SHIPPING_WGT DECIMAL(8,2) , 
SHIPPING_HT DECIMAL(8,2) , 
SHIPPING_WD DECIMAL(8,2) , 
SHIPPING_LH DECIMAL(8,2) , 
REORDER_POINT_QTY DECIMAL(8,2) , 
SAFETY_STOCK_QTY DECIMAL(8,2) , 
SAFETY_STOCK_DAYS DECIMAL(8) , 
MINIMUM_ORDER_QTY DECIMAL(8,2) , 
STOCK_AGREEMENT_NBR VARCHAR(15) , 
CYLINDER_GAS_CD VARCHAR(2) , 
SOLE_SOURCE_IND VARCHAR(1) , 
MAXIMUM_ORDER_QTY DECIMAL(8,2) , 
STOCK_CREATE_DT TIMESTAMP , 
REORDER_REMOVE_UNTIL_DT DATE , 
LAST_CHANGE_ACTV_IND_DT TIMESTAMP , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_T_PK_325 primary key (STOCK_ID) 
);

create table MM_STOCK_TRANS_REASON_T
(STOCK_TRANS_REASON_CD VARCHAR(8) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
INCREMENT_DECREMENT_IND VARCHAR(1) , 
OBJECT_TYPE_CD VARCHAR(4) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_TRANS_REASO_PK_326 primary key (STOCK_TRANS_REASON_CD) 
);

create table MM_STOCK_TYPE_T
(STOCK_TYPE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_STOCK_TYPE_T_PK_327 primary key (STOCK_TYPE_CD) 
);

create table MM_UNIT_OF_ISSUE_T
(UNIT_OF_ISSUE_CD VARCHAR(10) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
UNIT_OF_ISSUE_DESC VARCHAR(40) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_UNIT_OF_ISSUE_T_PK_328 primary key (UNIT_OF_ISSUE_CD) 
);

create table MM_UNSPSC_T
(UNSPSC_CD VARCHAR(12) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
SEGMENT VARCHAR(2) NOT NULL , 
SEGMENT_TITLE VARCHAR(256) , 
FAMILY VARCHAR(4) , 
FAMILY_TITLE VARCHAR(256) , 
CLASS VARCHAR(6) , 
CLASS_TITLE VARCHAR(256) , 
COMMODITY VARCHAR(8) , 
COMMODITY_TITLE VARCHAR(256) , 
KEY VARCHAR(6) NOT NULL , 
CODE VARCHAR(8) NOT NULL , 
TITLE VARCHAR(256) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_UNSPSC_T_PK_329 primary key (UNSPSC_CD) 
);

create table MM_WAREHOUSE_ACCOUNTS_T
(WAREHOUSE_ACCOUNT_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
WAREHOUSE_ACCOUNT_TYPE_CD VARCHAR(2) NOT NULL , 
FIN_COA_CD VARCHAR(2) NOT NULL , 
ACCOUNT_NBR VARCHAR(32) NOT NULL , 
SUB_ACCT_NBR VARCHAR(5) , 
FIN_OBJECT_CD VARCHAR(4) , 
FIN_SUB_OBJ_CD VARCHAR(6) , 
OFFSET_OBJECT_CD VARCHAR(4) , 
OFFSET_SUB_OBJ_CD VARCHAR(6) , 
PROJECT_CD VARCHAR(10) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WAREHOUSE_ACCOUNT_PK_330 primary key (WAREHOUSE_ACCOUNT_ID) 
);

create table MM_WAREHOUSE_ACCOUNT_TYPE_T
(WAREHOUSE_ACCOUNT_TYPE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WAREHOUSE_ACCOUNT_PK_331 primary key (WAREHOUSE_ACCOUNT_TYPE_CD) 
);

create table MM_WAREHOUSE_OBJECT_T
(WAREHOUSE_OBJECT_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
WAREHOUSE_OBJECT_TYPE_CD VARCHAR(4) NOT NULL , 
FIN_COA_CD VARCHAR(2) NOT NULL , 
FIN_OBJECT_CD VARCHAR(4) , 
FIN_SUB_OBJ_CD VARCHAR(6) , 
OFFSET_OBJECT_CD VARCHAR(4) , 
OFFSET_SUB_OBJ_CD VARCHAR(6) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WAREHOUSE_OBJECT_PK_332 primary key (WAREHOUSE_OBJECT_ID) 
);

create table MM_WAREHOUSE_OBJECT_TYPE_T
(OBJECT_TYPE_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(45) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WAREHOUSE_OBJECT_PK_333 primary key (OBJECT_TYPE_CD) 
);

create table MM_WAREHOUSE_T
(WAREHOUSE_CD VARCHAR(2) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WAREHOUSE_NME VARCHAR(60) , 
ADDRESS_ID DECIMAL(18) , 
CONSOLIDATION_CD VARCHAR(10) , 
DEFAULT_MARKUP_CD VARCHAR(12) , 
BUYOUT_IND VARCHAR(1) , 
RESALE_PERMIT_NBR VARCHAR(20) , 
BILLING_PROFILE_ID DECIMAL(18) , 
DEFAULT_FIN_COA_CD VARCHAR(2) , 
DEFAULT_ORG_CD VARCHAR(32) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WAREHOUSE_T_PK_334 primary key (WAREHOUSE_CD) 
);

create table MM_WORKSHEET_COUNTER_T
(WORKSHEET_COUNTER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WORKSHEET_COUNT_DOC_NBR VARCHAR(14) NOT NULL , 
WORKSHEET_CNTR_PRNCPL_ID VARCHAR(100) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WORKSHEET_COUNTER_PK_335 primary key (WORKSHEET_COUNTER_ID) 
);

create table MM_WORKSHEET_COUNT_DOC_T
(FDOC_NBR VARCHAR(14) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
WORKSHEET_CNT DECIMAL(8) NOT NULL , 
WORKSHEET_ORIGINAL_DT TIMESTAMP , 
WORKSHEET_COMPLETION_DT TIMESTAMP , 
WORKSHEET_STATUS_CD VARCHAR(4) , 
WAREHOUSE_CD VARCHAR(2) , 
PARENT_FDOC_NBR VARCHAR(14) , 
CYCLE_CNT_CD VARCHAR(1) , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WORKSHEET_COUNT_D_PK_336 primary key (FDOC_NBR) 
);

create table MM_WORKSHEET_STATUS_T
(WORKSHEET_STATUS_CD VARCHAR(4) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
NM VARCHAR(40) , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_WORKSHEET_STATUS_PK_337 primary key (WORKSHEET_STATUS_CD) 
);

create table MM_XML_INVOICE_T
(KEY_ID VARCHAR(100) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
CATALOG_CD VARCHAR(12) NOT NULL , 
ORDER_ID DECIMAL(8) NOT NULL , 
INVOICE_NBR VARCHAR(15) , 
PROCESSED_IND VARCHAR(1) , 
INVOICE_XML NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_XML_INVOICE_T_PK_338 primary key (KEY_ID) 
);

create table MM_XML_PURCHASE_ORDER_T
(XML_PURCHASE_ORDER_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
KEY_ID VARCHAR(100) NOT NULL , 
ORDER_ID DECIMAL(8) NOT NULL , 
CUSTOMER_ID VARCHAR(12) NOT NULL , 
PURCHASE_ORDER_URL VARCHAR(250) , 
PURCHASE_ORDER_XML NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_XML_PURCHASE_ORDE_PK_339 primary key (XML_PURCHASE_ORDER_ID) 
);

create table MM_XML_PURCHASE_REQUEST_T
(XML_PURCHASE_REQUEST_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
KEY_ID VARCHAR(100) NOT NULL , 
ORDER_ID DECIMAL(8) NOT NULL , 
CUSTOMER_ID VARCHAR(12) NOT NULL , 
SUPPLIER_AUXILARY_ID VARCHAR(28) , 
PURCHASE_REQUEST_XML NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_XML_PURCHASE_REQU_PK_340 primary key (XML_PURCHASE_REQUEST_ID) 
);

create table MM_ZONE_T
(ZONE_ID DECIMAL(18) NOT NULL , 
OBJ_ID VARCHAR(36) NOT NULL , 
VER_NBR DECIMAL(8) NOT NULL , 
ZONE_CD VARCHAR(2) NOT NULL , 
ZONE_DESC VARCHAR(40) , 
WAREHOUSE_CD VARCHAR(2) NOT NULL , 
ACTV_IND VARCHAR(1) NOT NULL , 
LAST_UPDATE_DT TIMESTAMP NOT NULL ,
constraint MM_ZONE_T_PK_341 primary key (ZONE_ID) 
);

create table QRTZ_BLOB_TRIGGERS
(TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
BLOB_DATA BLOB ,
constraint QRTZ_BLOB_TRIGGERS_PK_342 primary key (TRIGGER_GROUP, TRIGGER_NAME) 
);

create table QRTZ_CALENDARS
(CALENDAR_NAME VARCHAR(80) NOT NULL , 
CALENDAR BLOB NOT NULL ,
constraint QRTZ_CALENDARS_PK_343 primary key (CALENDAR_NAME) 
);

create table QRTZ_CRON_TRIGGERS
(TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
CRON_EXPRESSION VARCHAR(80) NOT NULL , 
TIME_ZONE_ID VARCHAR(80) ,
constraint QRTZ_CRON_TRIGGERS_PK_344 primary key (TRIGGER_GROUP, TRIGGER_NAME) 
);

create table QRTZ_FIRED_TRIGGERS
(ENTRY_ID VARCHAR(95) NOT NULL , 
TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
IS_VOLATILE VARCHAR(1) NOT NULL , 
INSTANCE_NAME VARCHAR(80) NOT NULL , 
FIRED_TIME DECIMAL(13) NOT NULL , 
PRIORITY DECIMAL(13) NOT NULL , 
STATE VARCHAR(16) NOT NULL , 
JOB_NAME VARCHAR(80) , 
JOB_GROUP VARCHAR(80) , 
IS_STATEFUL VARCHAR(1) , 
REQUESTS_RECOVERY VARCHAR(1) ,
constraint QRTZ_FIRED_TRIGGERS_PK_345 primary key (ENTRY_ID) 
);

create table QRTZ_JOB_DETAILS
(JOB_NAME VARCHAR(80) NOT NULL , 
JOB_GROUP VARCHAR(80) NOT NULL , 
DESCRIPTION VARCHAR(120) , 
JOB_CLASS_NAME VARCHAR(128) NOT NULL , 
IS_DURABLE VARCHAR(1) NOT NULL , 
IS_VOLATILE VARCHAR(1) NOT NULL , 
IS_STATEFUL VARCHAR(1) NOT NULL , 
REQUESTS_RECOVERY VARCHAR(1) NOT NULL , 
JOB_DATA BLOB ,
constraint QRTZ_JOB_DETAILS_PK_346 primary key (JOB_GROUP, JOB_NAME) 
);

create table QRTZ_JOB_LISTENERS
(JOB_NAME VARCHAR(80) NOT NULL , 
JOB_GROUP VARCHAR(80) NOT NULL , 
JOB_LISTENER VARCHAR(80) NOT NULL ,
constraint QRTZ_JOB_LISTENERS_PK_347 primary key (JOB_GROUP, JOB_LISTENER, JOB_NAME) 
);

create table QRTZ_LOCKS
(LOCK_NAME VARCHAR(40) NOT NULL ,
constraint QRTZ_LOCKS_PK_348 primary key (LOCK_NAME) 
);

create table QRTZ_PAUSED_TRIGGER_GRPS
(TRIGGER_GROUP VARCHAR(80) NOT NULL ,
constraint QRTZ_PAUSED_TRIGGER_PK_349 primary key (TRIGGER_GROUP) 
);

create table QRTZ_SCHEDULER_STATE
(INSTANCE_NAME VARCHAR(80) NOT NULL , 
LAST_CHECKIN_TIME DECIMAL(13) NOT NULL , 
CHECKIN_INTERVAL DECIMAL(13) NOT NULL ,
constraint QRTZ_SCHEDULER_STATE_PK_350 primary key (INSTANCE_NAME) 
);

create table QRTZ_SIMPLE_TRIGGERS
(TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
REPEAT_COUNT DECIMAL(7) NOT NULL , 
REPEAT_INTERVAL DECIMAL(12) NOT NULL , 
TIMES_TRIGGERED DECIMAL(7) NOT NULL ,
constraint QRTZ_SIMPLE_TRIGGERS_PK_351 primary key (TRIGGER_GROUP, TRIGGER_NAME) 
);

create table QRTZ_TRIGGERS
(TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
JOB_NAME VARCHAR(80) NOT NULL , 
JOB_GROUP VARCHAR(80) NOT NULL , 
IS_VOLATILE VARCHAR(1) NOT NULL , 
DESCRIPTION VARCHAR(120) , 
NEXT_FIRE_TIME DECIMAL(13) , 
PREV_FIRE_TIME DECIMAL(13) , 
PRIORITY DECIMAL(13) , 
TRIGGER_STATE VARCHAR(16) NOT NULL , 
TRIGGER_TYPE VARCHAR(8) NOT NULL , 
START_TIME DECIMAL(13) NOT NULL , 
END_TIME DECIMAL(13) , 
CALENDAR_NAME VARCHAR(80) , 
MISFIRE_INSTR DECIMAL(2) , 
JOB_DATA BLOB ,
constraint QRTZ_TRIGGERS_PK_352 primary key (TRIGGER_GROUP, TRIGGER_NAME) 
);

create table QRTZ_TRIGGER_LISTENERS
(TRIGGER_NAME VARCHAR(80) NOT NULL , 
TRIGGER_GROUP VARCHAR(80) NOT NULL , 
TRIGGER_LISTENER VARCHAR(80) NOT NULL ,
constraint QRTZ_TRIGGER_LISTENE_PK_353 primary key (TRIGGER_GROUP, TRIGGER_LISTENER, TRIGGER_NAME) 
);


alter table KRNS_ATT_T add constraint KRNS_ATT_TR1 foreign key (NTE_ID) 
references KRNS_NTE_T(NTE_ID);
alter table KRNS_CAMPUS_T add constraint SH_CAMPUS_TR1 foreign key (CAMPUS_TYP_CD) 
references KRNS_CMP_TYP_T(CAMPUS_TYP_CD);
alter table KRNS_MAINT_DOC_T add constraint KRNS_MAINT_DOC_TR1 foreign key (DOC_HDR_ID) 
references KRNS_DOC_HDR_T(DOC_HDR_ID);
alter table KRNS_NTE_T add constraint KRNS_NTE_TR1 foreign key (NTE_TYP_CD) 
references KRNS_NTE_TYP_T(NTE_TYP_CD);
alter table KRNS_PARM_DTL_TYP_T add constraint KRNS_PARM_DTL_TYP_TR1 foreign key (NMSPC_CD) 
references KRNS_NMSPC_T(NMSPC_CD);
alter table KRNS_PARM_T add constraint KRNS_PARM_TR2 foreign key (PARM_TYP_CD) 
references KRNS_PARM_TYP_T(PARM_TYP_CD);
alter table KRNS_PARM_T add constraint KRNS_PARM_TR1 foreign key (NMSPC_CD) 
references KRNS_NMSPC_T(NMSPC_CD);
alter table MM_ACCOUNTS_T add constraint MM_ACCOUNTS_TR2 foreign key (ORDER_DETAIL_ID) 
references MM_ORDER_DETAIL_T(ORDER_DETAIL_ID);
alter table MM_ACCOUNTS_T add constraint MM_ACCOUNTS_TR3 foreign key (SHOP_CART_DETAIL_ID) 
references MM_SHOP_CART_DETAIL_T(SHOP_CART_DETAIL_ID);
alter table MM_ACCOUNTS_T add constraint MM_ACCOUNTS_TR1 foreign key (ORDER_DOC_NBR) 
references MM_ORDER_DOC_T(FDOC_NBR);
alter table MM_ADDRESS_T add constraint MM_ADDRESS_TR1 foreign key (ADDRESS_TYPE_CD) 
references MM_ADDRESS_TYPE_T(ADDRESS_TYPE_CD);
alter table MM_BACK_ORDER_T add constraint MM_BACK_ORDER_TR2 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_BACK_ORDER_T add constraint MM_BACK_ORDER_TR1 foreign key (PICK_LIST_LINE_ID) 
references MM_PICK_LIST_LINE_T(PICK_LIST_LINE_ID);
alter table MM_BIN_T add constraint MM_BIN_TR1 foreign key (ZONE_ID) 
references MM_ZONE_T(ZONE_ID);
alter table MM_CATALOG_IMAGE_T add constraint MM_CATALOG_IMAGE_TR1 foreign key (CATALOG_ID) 
references MM_CATALOG_T(CATALOG_ID);
alter table MM_CATALOG_ITEM_IMAGE_T add constraint MM_CATALOG_ITEM_IMAGE_TR2 foreign key (CATALOG_IMAGE_ID) 
references MM_CATALOG_IMAGE_T(CATALOG_IMAGE_ID);
alter table MM_CATALOG_ITEM_IMAGE_T add constraint MM_CATALOG_ITEM_IMAGE_TR1 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_CATALOG_ITEM_MARKUP_T add constraint MM_CATALOG_ITEM_MARKUP_TR2 foreign key (MARKUP_CD) 
references MM_MARKUP_T(MARKUP_CD);
alter table MM_CATALOG_ITEM_MARKUP_T add constraint MM_CATALOG_ITEM_MARKUP_TR1 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_CATALOG_ITEM_PENDING_T add constraint MM_CATALOG_ITEM_PENDING_TR1 foreign key (CATALOG_PENDING_DOC_NBR) 
references MM_CATALOG_PENDING_DOC_T(FDOC_NBR);
alter table MM_CATALOG_ITEM_T add constraint MM_CATALOG_ITEM_TR3 foreign key (CATALOG_ITEM_PND_ID) 
references MM_CATALOG_ITEM_PENDING_T(CATALOG_ITEM_PND_ID);
alter table MM_CATALOG_ITEM_T add constraint MM_CATALOG_ITEM_TR2 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_CATALOG_ITEM_T add constraint MM_CATALOG_ITEM_TR1 foreign key (CATALOG_ID) 
references MM_CATALOG_T(CATALOG_ID);
alter table MM_CATALOG_SUBGROUP_ITEM_T add constraint MM_CATALOG_SUBGROUP_ITEM_TR1 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_CATALOG_SUBGROUP_ITEM_T add constraint MM_CATALOG_SUBGROUP_ITEM_TR2 foreign key (CATALOG_SUBGROUP_ID) 
references MM_CATALOG_SUBGROUP_T(CATALOG_SUBGROUP_ID);
alter table MM_CATALOG_SUBGROUP_T add constraint MM_CATALOG_SUBGROUP_TR1 foreign key (CATALOG_GROUP_CD) 
references MM_CATALOG_GROUP_T(CATALOG_GROUP_CD);
alter table MM_CATALOG_T add constraint MM_CATALOG_TR1 foreign key (CATALOG_PENDING_DOC_NBR) 
references MM_CATALOG_PENDING_DOC_T(FDOC_NBR);
alter table MM_CATALOG_T add constraint MM_CATALOG_TR2 foreign key (CATALOG_TYPE_CD) 
references MM_CATALOG_TYPE_T(CATALOG_TYPE_CD);
alter table MM_CHECKIN_CYLINDER_T add constraint MM_CHECKIN_CYLINDER_TR2 foreign key (RETURN_DETAIL_ID) 
references MM_RETURN_DETAIL_T(RETURN_DETAIL_ID);
alter table MM_CHECKIN_CYLINDER_T add constraint MM_CHECKIN_CYLINDER_TR1 foreign key (CHECKIN_DETAIL_ID) 
references MM_CHECKIN_DETAIL_T(CHECKIN_DETAIL_ID);
alter table MM_CHECKIN_DETAIL_T add constraint MM_CHECKIN_DETAIL_TR2 foreign key (ORDER_DETAIL_ID) 
references MM_ORDER_DETAIL_T(ORDER_DETAIL_ID);
alter table MM_CHECKIN_DETAIL_T add constraint MM_CHECKIN_DETAIL_TR1 foreign key (CHECKIN_DOC_NBR) 
references MM_CHECKIN_DOC_T(FDOC_NBR);
alter table MM_CHECKIN_DOC_T add constraint MM_CHECKIN_DOC_TR1 foreign key (ORDER_DOC_NBR) 
references MM_ORDER_DOC_T(FDOC_NBR);
alter table MM_CHECKIN_DOC_T add constraint MM_CHECKIN_DOC_TR2 foreign key (WAREHOUSE_CD) 
references MM_WAREHOUSE_T(WAREHOUSE_CD);
alter table MM_CPTL_AST_INFO_DTL_T add constraint MM_CPTL_AST_INFO_DTL_TR1 foreign key (ORDR_DTL_ID) 
references MM_CPTL_AST_INFO_T(ORDR_DTL_ID);
alter table MM_CREDIT_MEMO_EXPECTED_T add constraint MM_CREDIT_MEMO_EXPECTED_TR1 foreign key (CHECKIN_DETAIL_ID) 
references MM_CHECKIN_DETAIL_T(CHECKIN_DETAIL_ID);
alter table MM_CUSTOMER_FAV_DETAIL_T add constraint MM_CUSTOMER_FAV_DETAIL_TR1 foreign key (CUSTOMER_FAV_ID) 
references MM_CUSTOMER_FAV_HEADER_T(CUSTOMER_FAV_ID);
alter table MM_CUSTOMER_FAV_DETAIL_T add constraint MM_CUSTOMER_FAV_DETAIL_TR2 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_CUSTOMER_FAV_HEADER_T add constraint MM_CUSTOMER_FAV_HEADER_TR1 foreign key (PRNCPL_NM) 
references MM_CUSTOMER_T(PRNCPL_NM);
alter table MM_CYLINDER_T add constraint MM_CYLINDER_TR4 foreign key (RETURN_DETAIL_ID) 
references MM_RETURN_DETAIL_T(RETURN_DETAIL_ID);
alter table MM_CYLINDER_T add constraint MM_CYLINDER_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_CYLINDER_T add constraint MM_CYLINDER_TR2 foreign key (CHECKIN_DETAIL_ID) 
references MM_CHECKIN_DETAIL_T(CHECKIN_DETAIL_ID);
alter table MM_CYLINDER_T add constraint MM_CYLINDER_TR3 foreign key (PICK_LIST_LINE_ID) 
references MM_PICK_LIST_LINE_T(PICK_LIST_LINE_ID);
alter table MM_DOT_HAZARDOUS_T add constraint MM_DOT_HAZARDOUS_TR1 foreign key (DRIVER_MANIFEST_CD) 
references MM_DRIVER_MANIFEST_T(DRIVER_MANIFEST_CD);
alter table MM_FURNITURE_T add constraint MM_FURNITURE_TR1 foreign key (SHOP_CART_ID) 
references MM_SHOP_CART_T(SHOP_CART_ID);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR5 foreign key (HAZARDOUS_UN_CD) 
references MM_HAZARDOUS_UN_T(HAZARDOUS_UN_CD);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR6 foreign key (EHS_HAZARDOUS_CD) 
references MM_EHS_HAZARDOUS_T(EHS_HAZARDOUS_CD);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR3 foreign key (EHS_HAZARDOUS_STATE_CD) 
references MM_EHS_HAZARDOUS_STATE_T(EHS_HAZARDOUS_STATE_CD);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR4 foreign key (DOT_HAZARDOUS_CD) 
references MM_DOT_HAZARDOUS_T(DOT_HAZARDOUS_CD);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR2 foreign key (EHS_CONTAINER_CD) 
references MM_EHS_CONTAINER_T(EHS_CONTAINER_CD);
alter table MM_HAZARDOUS_MATERIEL_T add constraint MM_HAZARDOUS_MATERIEL_TR7 foreign key (EHS_UNIT_OF_ISSUE_CD) 
references MM_UNIT_OF_ISSUE_T(UNIT_OF_ISSUE_CD);
alter table MM_MARKUP_T add constraint MM_MARKUP_TR1 foreign key (MARKUP_TYPE_CD) 
references MM_MARKUP_TYPE_T(MARKUP_TYPE_CD);
alter table MM_MARKUP_T add constraint MM_MARKUP_TR3 foreign key (CATALOG_GROUP_CD) 
references MM_CATALOG_GROUP_T(CATALOG_GROUP_CD);
alter table MM_MARKUP_T add constraint MM_MARKUP_TR2 foreign key (WAREHOUSE_CD) 
references MM_WAREHOUSE_T(WAREHOUSE_CD);
alter table MM_MARKUP_T add constraint MM_MARKUP_TR4 foreign key (CATALOG_SUBGROUP_ID) 
references MM_CATALOG_SUBGROUP_T(CATALOG_SUBGROUP_ID);
alter table MM_ORDER_DETAIL_T add constraint MM_ORDER_DETAIL_TR4 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_ORDER_DETAIL_T add constraint MM_ORDER_DETAIL_TR5 foreign key (ADDITIONAL_COST_TYPE_CD) 
references MM_ADDITIONAL_COST_TYPE_T(ADDITIONAL_COST_TYPE_CD);
alter table MM_ORDER_DETAIL_T add constraint MM_ORDER_DETAIL_TR2 foreign key (ORDER_DETAIL_STATUS_CD) 
references MM_ORDER_STATUS_T(ORDER_STATUS_CD);
alter table MM_ORDER_DETAIL_T add constraint MM_ORDER_DETAIL_TR3 foreign key (SALES_INSTANCE_ID) 
references MM_SALES_INSTANCE_T(SALES_INSTANCE_ID);
alter table MM_ORDER_DETAIL_T add constraint MM_ORDER_DETAIL_TR1 foreign key (ORDER_DOC_NBR) 
references MM_ORDER_DOC_T(FDOC_NBR);
alter table MM_ORDER_DOC_T add constraint MM_ORDER_DOC_TR4 foreign key (RECURRING_ORDER_ID) 
references MM_RECURRING_ORDER_T(RECURRING_ORDER_ID);
alter table MM_ORDER_DOC_T add constraint MM_ORDER_DOC_TR3 foreign key (SHOP_CART_ID) 
references MM_SHOP_CART_T(SHOP_CART_ID);
alter table MM_ORDER_DOC_T add constraint MM_ORDER_DOC_TR2 foreign key (ORDER_DOC_STATUS_CD) 
references MM_ORDER_STATUS_T(ORDER_STATUS_CD);
alter table MM_ORDER_DOC_T add constraint MM_ORDER_DOC_TR1 foreign key (ORDER_TYPE_CD) 
references MM_ORDER_TYPE_T(ORDER_TYPE_CD);
alter table MM_PACK_LIST_DOC_T add constraint MM_PACK_LIST_DOC_TR1 foreign key (PACK_STATUS_CD) 
references MM_PACK_STATUS_CODE_T(PACK_STATUS_CD);
alter table MM_PACK_LIST_LINE_T add constraint MM_PACK_LIST_LINE_TR2 foreign key (DELIVERY_REASON_CD) 
references MM_DELIVERY_REASON_T(DELIVERY_REASON_CD);
alter table MM_PACK_LIST_LINE_T add constraint MM_PACK_LIST_LINE_TR1 foreign key (PACK_LIST_DOC_NBR) 
references MM_PACK_LIST_DOC_T(FDOC_NBR);
alter table MM_PACK_LIST_LINE_T add constraint MM_PACK_LIST_LINE_TR4 foreign key (PACK_STATUS_CD) 
references MM_PACK_STATUS_CODE_T(PACK_STATUS_CD);
alter table MM_PACK_LIST_LINE_T add constraint MM_PACK_LIST_LINE_TR3 foreign key (PICK_LIST_LINE_ID) 
references MM_PICK_LIST_LINE_T(PICK_LIST_LINE_ID);
alter table MM_PACK_LIST_LINE_T add constraint MM_PACK_LIST_LINE_TR5 foreign key (ROUTE_CD) 
references MM_ROUTE_T(ROUTE_CD);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR5 foreign key (PICK_TICKET_NBR) 
references MM_PICK_TICKET_T(PICK_TICKET_NBR);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR6 foreign key (ROUTE_CD) 
references MM_ROUTE_T(ROUTE_CD);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR3 foreign key (PICK_STATUS_CD) 
references MM_PICK_STATUS_CODE_T(PICK_STATUS_CD);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR4 foreign key (ORDER_DETAIL_ID) 
references MM_ORDER_DETAIL_T(ORDER_DETAIL_ID);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR1 foreign key (PICK_LIST_DOC_NBR) 
references MM_PICK_LIST_DOC_T(FDOC_NBR);
alter table MM_PICK_LIST_LINE_T add constraint MM_PICK_LIST_LINE_TR2 foreign key (SALES_INSTANCE_ID) 
references MM_SALES_INSTANCE_T(SALES_INSTANCE_ID);
alter table MM_PICK_TICKET_T add constraint MM_PICK_TICKET_TR2 foreign key (PICK_STATUS_CD) 
references MM_PICK_STATUS_CODE_T(PICK_STATUS_CD);
alter table MM_PICK_TICKET_T add constraint MM_PICK_TICKET_TR1 foreign key (PICK_LIST_DOC_NBR) 
references MM_PICK_LIST_DOC_T(FDOC_NBR);
alter table MM_PICK_VERIFY_DOC_T add constraint MM_PICK_VERIFY_DOC_TR1 foreign key (PICK_TICKET_NBR) 
references MM_PICK_TICKET_T(PICK_TICKET_NBR);
alter table MM_PROFILE_T add constraint MM_PROFILE_TR1 foreign key (CUSTOMER_PRNCPL_NM) 
references MM_CUSTOMER_T(PRNCPL_NM);
alter table MM_RENTAL_T add constraint MM_RENTAL_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR4 foreign key (CHECKIN_DETAIL_ID) 
references MM_CHECKIN_DETAIL_T(CHECKIN_DETAIL_ID);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR5 foreign key (ACTION_CD) 
references MM_ACTION_T(ACTION_CD);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR6 foreign key (DISPOSITION_CD) 
references MM_DISPOSITION_T(DISPOSITION_CD);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR1 foreign key (RETURN_DOC_NBR) 
references MM_RETURN_DOC_T(FDOC_NBR);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR2 foreign key (RETURN_DETAIL_STATUS_CD) 
references MM_RETURN_STATUS_CODE_T(RETURN_STATUS_CD);
alter table MM_RETURN_DETAIL_T add constraint MM_RETURN_DETAIL_TR3 foreign key (ORDER_DETAIL_ID) 
references MM_ORDER_DETAIL_T(ORDER_DETAIL_ID);
alter table MM_RETURN_DOC_T add constraint MM_RETURN_DOC_TR5 foreign key (CHECKIN_DOC_NBR) 
references MM_CHECKIN_DOC_T(FDOC_NBR);
alter table MM_RETURN_DOC_T add constraint MM_RETURN_DOC_TR3 foreign key (ORDER_DOC_NBR) 
references MM_ORDER_DOC_T(FDOC_NBR);
alter table MM_RETURN_DOC_T add constraint MM_RETURN_DOC_TR4 foreign key (CUSTOMER_PROFILE_ID) 
references MM_PROFILE_T(PROFILE_ID);
alter table MM_RETURN_DOC_T add constraint MM_RETURN_DOC_TR1 foreign key (RETURN_TYPE_CD) 
references MM_RETURN_TYPE_T(RETURN_TYPE_CD);
alter table MM_RETURN_DOC_T add constraint MM_RETURN_DOC_TR2 foreign key (RETURN_DOC_STATUS_CD) 
references MM_RETURN_STATUS_CODE_T(RETURN_STATUS_CD);
alter table MM_ROUTE_T add constraint MM_ROUTE_TR1 foreign key (DRIVER_MANIFEST_CD) 
references MM_DRIVER_MANIFEST_T(DRIVER_MANIFEST_CD);
alter table MM_ROUTE_T add constraint MM_ROUTE_TR2 foreign key (RESTRICTED_ROUTE_CD) 
references MM_RESTRICTED_ROUTE_CODE_T(RESTRICTED_ROUTE_CD);
alter table MM_SALES_INSTANCE_T add constraint MM_SALES_INSTANCE_TR1 foreign key (ORDER_SALES_STATUS_CD) 
references MM_ORDER_STATUS_T(ORDER_STATUS_CD);
alter table MM_SALES_INSTANCE_T add constraint MM_SALES_INSTANCE_TR2 foreign key (ORDER_TYPE_CD) 
references MM_ORDER_TYPE_T(ORDER_TYPE_CD);
alter table MM_SALES_INSTANCE_T add constraint MM_SALES_INSTANCE_TR3 foreign key (ORDER_DOC_NBR) 
references MM_ORDER_DOC_T(FDOC_NBR);
alter table MM_SHOP_CART_DETAIL_T add constraint MM_SHOP_CART_DETAIL_TR1 foreign key (SHOP_CART_ID) 
references MM_SHOP_CART_T(SHOP_CART_ID);
alter table MM_SHOP_CART_DETAIL_T add constraint MM_SHOP_CART_DETAIL_TR2 foreign key (CATALOG_ITEM_ID) 
references MM_CATALOG_ITEM_T(CATALOG_ITEM_ID);
alter table MM_SHOP_CART_DTL_ADDL_COST_T add constraint MM_SHOP_CART_DTL_ADDL_COST_TR1 foreign key (SHOP_CART_DETAIL_ID) 
references MM_SHOP_CART_DETAIL_T(SHOP_CART_DETAIL_ID);
alter table MM_SHOP_CART_DTL_ADDL_COST_T add constraint MM_SHOP_CART_DTL_ADDL_COST_TR2 foreign key (ADDITIONAL_COST_TYPE_CD) 
references MM_ADDITIONAL_COST_TYPE_T(ADDITIONAL_COST_TYPE_CD);
alter table MM_SHOP_CART_T add constraint MM_SHOP_CART_TR1 foreign key (CUSTOMER_PROFILE_ID) 
references MM_PROFILE_T(PROFILE_ID);
alter table MM_STOCK_ATTRIBUTE_T add constraint MM_STOCK_ATTRIBUTE_TR2 foreign key (STOCK_ATTRIBUTE_CD) 
references MM_STOCK_ATTRIBUTE_CODE_T(STOCK_ATTRIBUTE_CD);
alter table MM_STOCK_ATTRIBUTE_T add constraint MM_STOCK_ATTRIBUTE_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_BALANCE_T add constraint MM_STOCK_BALANCE_TR1 foreign key (BIN_ID) 
references MM_BIN_T(BIN_ID);
alter table MM_STOCK_BALANCE_T add constraint MM_STOCK_BALANCE_TR2 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_COST_T add constraint MM_STOCK_COST_TR2 foreign key (COST_CD) 
references MM_COST_CODE_T(COST_CD);
alter table MM_STOCK_COST_T add constraint MM_STOCK_COST_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_COUNT_T add constraint MM_STOCK_COUNT_TR4 foreign key (BIN_ID) 
references MM_BIN_T(BIN_ID);
alter table MM_STOCK_COUNT_T add constraint MM_STOCK_COUNT_TR2 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_COUNT_T add constraint MM_STOCK_COUNT_TR3 foreign key (STOCK_TRANS_REASON_CD) 
references MM_STOCK_TRANS_REASON_T(STOCK_TRANS_REASON_CD);
alter table MM_STOCK_COUNT_T add constraint MM_STOCK_COUNT_TR1 foreign key (WORKSHEET_COUNT_DOC_NBR) 
references MM_WORKSHEET_COUNT_DOC_T(FDOC_NBR);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR6 foreign key (WORKSHEET_COUNT_DOC_NBR) 
references MM_WORKSHEET_COUNT_DOC_T(FDOC_NBR);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR5 foreign key (RETURN_DOC_NBR) 
references MM_RETURN_DOC_T(FDOC_NBR);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR8 foreign key (BIN_ID) 
references MM_BIN_T(BIN_ID);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR7 foreign key (STOCK_COST_ID) 
references MM_STOCK_COST_T(STOCK_COST_ID);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR2 foreign key (STOCK_TRANS_REASON_CD) 
references MM_STOCK_TRANS_REASON_T(STOCK_TRANS_REASON_CD);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR4 foreign key (PICK_VERIFY_DOC_NBR) 
references MM_PICK_VERIFY_DOC_T(FDOC_NBR);
alter table MM_STOCK_HISTORY_T add constraint MM_STOCK_HISTORY_TR3 foreign key (CHECKIN_DOC_NBR) 
references MM_CHECKIN_DOC_T(FDOC_NBR);
alter table MM_STOCK_PACK_NOTE_T add constraint MM_STOCK_PACK_NOTE_TR2 foreign key (PACK_LIST_ANNOUNCEMENT_CD) 
references MM_PACK_LIST_ANNOUNCEMENT_T(PACK_LIST_ANNOUNCEMENT_CD);
alter table MM_STOCK_PACK_NOTE_T add constraint MM_STOCK_PACK_NOTE_TR1 foreign key (STOCK_ID) 
references MM_STOCK_T(STOCK_ID);
alter table MM_STOCK_T add constraint MM_STOCK_TR6 foreign key (RESTRICTED_ROUTE_CD) 
references MM_RESTRICTED_ROUTE_CODE_T(RESTRICTED_ROUTE_CD);
alter table MM_STOCK_T add constraint MM_STOCK_TR7 foreign key (CYLINDER_GAS_CD) 
references MM_CYLINDER_GAS_T(CYLINDER_GAS_CD);
alter table MM_STOCK_T add constraint MM_STOCK_TR5 foreign key (STOCK_AGREEMENT_NBR) 
references MM_AGREEMENT_T(AGREEMENT_NBR);
alter table MM_STOCK_T add constraint MM_STOCK_TR3 foreign key (CYCLE_CNT_CD) 
references MM_CYCLE_COUNT_T(CYCLE_CNT_CD);
alter table MM_STOCK_T add constraint MM_STOCK_TR2 foreign key (STOCK_TYPE_CD) 
references MM_STOCK_TYPE_T(STOCK_TYPE_CD);
alter table MM_STOCK_T add constraint MM_STOCK_TR1 foreign key (SALES_UNIT_OF_ISSUE_CD) 
references MM_UNIT_OF_ISSUE_T(UNIT_OF_ISSUE_CD);
alter table MM_STOCK_TRANS_REASON_T add constraint MM_STOCK_TRANS_REASON_TR1 foreign key (OBJECT_TYPE_CD) 
references MM_WAREHOUSE_OBJECT_TYPE_T(OBJECT_TYPE_CD);
alter table MM_WAREHOUSE_ACCOUNTS_T add constraint MM_WAREHOUSE_ACCOUNTS_TR1 foreign key (WAREHOUSE_ACCOUNT_TYPE_CD) 
references MM_WAREHOUSE_ACCOUNT_TYPE_T(WAREHOUSE_ACCOUNT_TYPE_CD);
alter table MM_WAREHOUSE_ACCOUNTS_T add constraint MM_WAREHOUSE_ACCOUNTS_TR2 foreign key (WAREHOUSE_CD) 
references MM_WAREHOUSE_T(WAREHOUSE_CD);
alter table MM_WAREHOUSE_OBJECT_T add constraint MM_WAREHOUSE_OBJECT_TR1 foreign key (WAREHOUSE_CD) 
references MM_WAREHOUSE_T(WAREHOUSE_CD);
alter table MM_WAREHOUSE_OBJECT_T add constraint MM_WAREHOUSE_OBJECT_TR2 foreign key (WAREHOUSE_OBJECT_TYPE_CD) 
references MM_WAREHOUSE_OBJECT_TYPE_T(OBJECT_TYPE_CD);
alter table MM_WORKSHEET_COUNTER_T add constraint MM_WORKSHEET_COUNTER_TR1 foreign key (WORKSHEET_COUNT_DOC_NBR) 
references MM_WORKSHEET_COUNT_DOC_T(FDOC_NBR);
alter table MM_WORKSHEET_COUNT_DOC_T add constraint MM_WORKSHEET_COUNT_DOC_TR1 foreign key (WORKSHEET_STATUS_CD) 
references MM_WORKSHEET_STATUS_T(WORKSHEET_STATUS_CD);
alter table MM_ZONE_T add constraint MM_ZONE_TR1 foreign key (WAREHOUSE_CD) 
references MM_WAREHOUSE_T(WAREHOUSE_CD);
alter table QRTZ_BLOB_TRIGGERS add constraint SYS_C0092243 foreign key (TRIGGER_NAME, TRIGGER_GROUP) 
references QRTZ_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP);
alter table QRTZ_CRON_TRIGGERS add constraint SYS_C0091987 foreign key (TRIGGER_NAME, TRIGGER_GROUP) 
references QRTZ_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP);
alter table QRTZ_JOB_LISTENERS add constraint SYS_C0091985 foreign key (JOB_NAME, JOB_GROUP) 
references QRTZ_JOB_DETAILS(JOB_NAME, JOB_GROUP);
alter table QRTZ_SIMPLE_TRIGGERS add constraint SYS_C0091986 foreign key (TRIGGER_NAME, TRIGGER_GROUP) 
references QRTZ_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP);
alter table QRTZ_TRIGGERS add constraint SYS_C0092242 foreign key (JOB_NAME, JOB_GROUP) 
references QRTZ_JOB_DETAILS(JOB_NAME, JOB_GROUP);
alter table QRTZ_TRIGGER_LISTENERS add constraint SYS_C0091988 foreign key (TRIGGER_NAME, TRIGGER_GROUP) 
references QRTZ_TRIGGERS(TRIGGER_NAME, TRIGGER_GROUP);
