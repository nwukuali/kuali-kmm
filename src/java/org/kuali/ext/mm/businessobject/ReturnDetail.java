package org.kuali.ext.mm.businessobject;

// Generated Apr 16, 2009 10:01:00 AM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.cxf.common.util.StringUtils;
import org.kuali.ext.mm.common.sys.MMConstants;
import org.kuali.ext.mm.common.sys.context.SpringContext;
import org.kuali.ext.mm.document.ReturnDocument;
import org.kuali.ext.mm.service.StockService;
import org.kuali.ext.mm.util.MMDecimal;
import org.kuali.rice.kns.util.ObjectUtils;


/**
 * ReturnDetail generated by hbm2java
 */
@Entity
@Table(name = "MM_RETURN_DETAIL_T")
public class ReturnDetail extends MMPersistableBusinessObjectBase implements RentalTrackingDetail, Cloneable {

    private static final long serialVersionUID = 803425314216562410L;

    private String dispostitionCode;

    private String binZoneDesc = null;

    private ReturnStatusCode returnStatus;

    private Bin bin = null;

    private Integer binId;

    private String actionCdLoopkupable;

    private Integer returnDetailId;

    private CatalogItem catalogItem = null;

    private List<StagingRental> returnRentals = new ArrayList<StagingRental>(0);

    private List<Rental> rentals = new ArrayList<Rental>(0);

    private List<CreditMemoExpected> creditMemoExpected = new ArrayList<CreditMemoExpected>(0);

    private String stockDistributorNumber = null;

    private boolean rentalError = false;

    private boolean itemReturned = false;

    private UnitOfIssue returnUnitOfIssue = null;

    private OrderStatus orderStatus;

    private OrderDetail orderDetail;

    private Integer checkinDetailId;

    private String returnDocNumber;

    private ReturnDocument returnDoc;

    private String returnItemDetailDescription;

    private CheckinDetail checkinDetail;

    private String returnTypeCode;

    private String returnDetailStatusCode = MMConstants.OrderStatus.INITIATED;

    private MMDecimal returnItemPrice;

    private Integer orderDetailId = null;

    private MMDecimal returnItemPercentage = new MMDecimal(0);

    private Integer orderDocumentNumber;

    private Integer orderLineNumber;

    private Integer returnQuantity = 0;

    private boolean departmentCreditInd = false;

    private Integer vendorReturnQuantity;

    private MMDecimal returnCreditAmt = new MMDecimal(0);

    private Integer vendorHeaderGeneratedId;

    private Integer vendorDetailAssignedId;

    private String vendorNm;

    private boolean vendorCreditInd;

    private boolean vendorReshipInd;

    private boolean vendorDispositionInd;

    private String actionCd;

    private Integer reqsId;

    private Integer poId;

    private String creditDocumentNumber;

    @Transient
    private String departmentCreditStringInd;
    
    public List<CreditMemoExpected> getCreditMemoExpected() {
        return this.creditMemoExpected;
    }

    public void setCreditMemoExpected(List<CreditMemoExpected> creditMemoExpected) {
        this.creditMemoExpected = creditMemoExpected;
    }

    public String getActionCdLoopkupable() {
        return actionCdLoopkupable;
    }

    public void setActionCdLoopkupable(String actionCdLoopkupable) {
        this.actionCdLoopkupable = actionCdLoopkupable;
    }

    public String getDispostitionCode() {
        return dispostitionCode;
    }

    public void setDispostitionCode(String dispostitionCode) {
        this.dispostitionCode = dispostitionCode;
    }

    public List<Rental> getRentals() {
        return this.rentals;
    }

    public void setRentals(List<Rental> rentals) {
        this.rentals = rentals;
    }

    public void addRentals(Rental rentals) {
        this.rentals.add(rentals);
    }

    public List<StagingRental> getReturnRentals() {
        return this.returnRentals;
    }

    public void setReturnRentals(List<StagingRental> returnRentals) {
        this.returnRentals = returnRentals;
    }

    public boolean isRentalReturned() {
        return this.returnRentals.size() > 0;
    }

    public void addReturnRental(StagingRental rental) {
        this.returnRentals.add(rental);
    }

    public CatalogItem getCatalogItem() {
        return catalogItem;
    }

    public boolean isLineItemRental() {
        return (this.catalogItem != null || this.getCatalogItem() != null) ? (this.getCatalogItem()
                .getStock() != null ? (this.catalogItem.getStock().isRental()) : false) : false;
    }

    public boolean isRentalError() {
        return this.rentalError;
    }

    public void setRentalError(boolean rentalError) {
        this.rentalError = rentalError;
    }

    public String getStockDistributorNumber() {

        if (this.catalogItem != null && !StringUtils.isEmpty(this.catalogItem.getStockId()))
            return this.catalogItem.getStock().getStockDistributorNbr();

        return stockDistributorNumber;
    }

    public String getBinZoneDesc() {

        if (this.binZoneDesc != null)
            return binZoneDesc;

        if (this.bin == null && binId != 0)
            this.bin = StoresPersistableBusinessObject.getObjectByPrimaryKey(Bin.class, binId);

        if (bin != null)
            return bin.getBinDisDesc();

        return "";
    }

    public void setBinZoneDesc(String binZoneDesc) {
        this.binZoneDesc = binZoneDesc;
    }

    public void setStockDistributorNumber(String stockDistributorNumber) {
        this.stockDistributorNumber = stockDistributorNumber;
    }

    public void setCatalogItem(CatalogItem catalogItem) {
        this.catalogItem = catalogItem;
    }

    public UnitOfIssue getReturnUnitOfIssue() {
        return returnUnitOfIssue;
    }

    public void setReturnUnitOfIssue(UnitOfIssue returnUnitOfIssue) {
        this.returnUnitOfIssue = returnUnitOfIssue;
    }

    public Integer getCheckinDetailId() {
        return checkinDetailId;
    }

    public void setCheckinDetailId(Integer checkinDetailId) {
        this.checkinDetailId = checkinDetailId;
    }

    public String getOrderDeliveryDepartment() {
        if (this.returnDoc.getOrderDocument() != null)
            return this.returnDoc.getOrderDocument().getDeliveryDepartmentNm();
        return "";
    }

    public String getOrderWareHouse() {
        String warehouse = "";
        if (ObjectUtils.isNotNull(this.returnDoc.getOrderDocument())) {
            if (ObjectUtils.isNotNull(this.returnDoc.getOrderDocument().getWarehouse())) {
                warehouse = this.returnDoc.getOrderDocument().getWarehouse().getWarehouseNme();
            }
            else {
                String code = this.returnDoc.getOrderDocument().getWarehouseCd();
                if (!StringUtils.isEmpty(code)) {
                    Warehouse obj = StoresPersistableBusinessObject.getObjectByPrimaryKey(
                            Warehouse.class, code);
                    if (ObjectUtils.isNotNull(obj))
                        warehouse = obj.getWarehouseNme();
                }
            }
        }
        return warehouse;
    }

    public String getCatalogItemNumber() {
        if (this.catalogItem != null)
            return this.catalogItem.getDistributorNbr() + "  "
                    + this.catalogItem.getCatalog().getCatalogCd();
        return "";
    }

    public String getRTVConversion() {
        return this.returnQuantity + "  " + this.returnUnitOfIssueOfCode;
    }

    public String getItemDescription() {
        if (this.catalogItem != null && this.catalogItem.getStock() != null)
            return this.catalogItem.getStock().getStockDesc();
        return "";
    }

    public CheckinDetail getCheckinDetail() {
        return checkinDetail;
    }

    public void setCheckinDetail(CheckinDetail checkinDetail) {
        this.checkinDetail = checkinDetail;
    }

    public OrderDetail getOrderDetail() {
        return orderDetail;
    }

    public String getReturnTypeCode() {
        return returnTypeCode;
    }

    public void setReturnTypeCode(String returnTypeCode) {
        this.returnTypeCode = returnTypeCode;
    }

    public void setOrderDetail(OrderDetail orderDetail) {
        this.orderDetail = orderDetail;
    }

    public Integer getOrderDetailId() {
        return orderDetailId;
    }

    public void setOrderDetailId(Integer orderDetailId) {
        this.orderDetailId = orderDetailId;
    }

    public String getReturnDetailStatusCode() {
        return returnDetailStatusCode;
    }

    public void setReturnDetailStatusCode(String returnDetailStatusCode) {
        this.returnDetailStatusCode = returnDetailStatusCode;
    }

    public void setReturnItemPercentage(MMDecimal returnItemPercentage) {
        this.returnItemPercentage = returnItemPercentage;
    }

    public MMDecimal getReturnItemPercentage() {
        return returnItemPercentage;
    }

    public Integer getOrderLineNumber() {
        return orderLineNumber;
    }

    public void setOrderLineNumber(Integer orderLineNumber) {
        this.orderLineNumber = orderLineNumber;
    }

    public Integer getOrderDocumentNumber() {
        return orderDocumentNumber;
    }

    public MMDecimal getReturnItemPrice() {
        return returnItemPrice;
    }

    public void setOrderDocumentNumber(Integer orderDocumentNumber) {
        this.orderDocumentNumber = orderDocumentNumber;
    }

    public void setReturnItemPrice(MMDecimal returnItemPrice) {
        this.returnItemPrice = returnItemPrice;
    }

    public Integer getReturnQuantity() {
        return returnQuantity;
    }

    public void setReturnQuantity(Integer returnQuantity) {
        this.returnQuantity = returnQuantity;
    }

    public String getReturnItemDetailDescription() {
        return returnItemDetailDescription;
    }

    public void setReturnItemDetailDescription(String returnItemDetailDescription) {
        this.returnItemDetailDescription = returnItemDetailDescription;
    }


    public ReturnDocument getReturnDoc() {
        return returnDoc;
    }

    public void setReturnDoc(ReturnDocument returnDoc) {
        this.returnDoc = returnDoc;
    }

    @Column(name = "CATALOG_ITEM_ID", nullable = false, length = 10)
    private String catalogItemId;

    @Column(name = "RETURN_UNIT_OF_ISSUE_CD", nullable = false, length = 10)
    private String returnUnitOfIssueOfCode;

    public String getReturnUnitOfIssueOfCode() {
        return returnUnitOfIssueOfCode;
    }

    public void setReturnUnitOfIssueOfCode(String returnUnitOfIssueOfCode) {
        this.returnUnitOfIssueOfCode = returnUnitOfIssueOfCode;
    }

    public Integer getVendorReturnQuantity() {
        return vendorReturnQuantity;
    }

    public void setVendorReturnQuantity(Integer vendorReturnQuantity) {
        this.vendorReturnQuantity = vendorReturnQuantity;
    }

    public String getCatalogItemId() {
        return catalogItemId;
    }

    public void setCatalogItemId(String catalogItemId) {
        this.catalogItemId = catalogItemId;
    }

    public Integer getReturnDetailId() {
        return returnDetailId;
    }

    public void setReturnDetailId(Integer returnDetailId) {
        this.returnDetailId = returnDetailId;
    }

    public String getReturnDocNumber() {
        return returnDocNumber;
    }

    public void setReturnDocNumber(String returnDocNumber) {
        this.returnDocNumber = returnDocNumber;
    }

    public ReturnDetail() {
    }

    public OrderStatus getOrderStatus() {
        return this.orderStatus;
    }

    public void setOrderStatus(OrderStatus orderStatus) {
        this.orderStatus = orderStatus;
    }

    public MMDecimal getReturnCreditAmt() {
        return this.returnCreditAmt;
    }

    public void setReturnCreditAmt(MMDecimal returnCreditAmt) {
        this.returnCreditAmt = returnCreditAmt;
    }

    public Integer getVendorHeaderGeneratedId() {
        return this.vendorHeaderGeneratedId;
    }

    public void setVendorHeaderGeneratedId(Integer vendorHeaderGeneratedId) {
        this.vendorHeaderGeneratedId = vendorHeaderGeneratedId;
    }

    public Integer getVendorDetailAssignedId() {
        return this.vendorDetailAssignedId;
    }

    public void setVendorDetailAssignedId(Integer vendorDetailAssignedId) {
        this.vendorDetailAssignedId = vendorDetailAssignedId;
    }

    public String getVendorNm() {
        return this.vendorNm;
    }

    public void setVendorNm(String vendorNm) {
        this.vendorNm = vendorNm;
    }

    public boolean isVendorCreditInd() {
        return this.vendorCreditInd;
    }

    public void setVendorCreditInd(boolean vendorCreditInd) {
        this.vendorCreditInd = vendorCreditInd;
    }

    public boolean isVendorReshipInd() {
        return this.vendorReshipInd;
    }

    public void setVendorReshipInd(boolean vendorReshipInd) {
        this.vendorReshipInd = vendorReshipInd;
    }

    public boolean isVendorDispositionInd() {
        return this.vendorDispositionInd;
    }

    public void setVendorDispositionInd(boolean vendorDispositionInd) {
        this.vendorDispositionInd = vendorDispositionInd;
    }

    public String getActionCd() {
        return this.actionCd;
    }

    public void setActionCd(String actionCd) {
        this.actionCd = actionCd;
    }

    public Integer getReqsId() {
        return this.reqsId;
    }

    public boolean isCustomerLine() {
        return this.actionCd != null
                && this.actionCd.equalsIgnoreCase(MMConstants.ReturnActionCode.CUSTOMER);
    }

    public boolean isDeptCreditRequired() {
        return this.actionCd != null
                && !(this.actionCd.equalsIgnoreCase(MMConstants.ReturnActionCode.WAREHS) || this.actionCd
                        .equalsIgnoreCase(MMConstants.ReturnActionCode.REJECTED));

    }

    public void setItemReturned(boolean itemReturned) {
        this.itemReturned = itemReturned;
    }

    public MMDecimal getExtendedCost() {
        if (this.returnQuantity > 0) {
            MMDecimal addlCost = this.orderDetail.getOrderItemAdditionalCostAmt() != null ? 
                    this.orderDetail.getOrderItemAdditionalCostAmt() : MMDecimal.ZERO;
            
            return this.returnItemPrice != null ? new MMDecimal(this.returnItemPrice.add(addlCost).multiply(
                    new MMDecimal(this.returnQuantity)).doubleValue()) : MMDecimal.ZERO;
        }

        return MMDecimal.ZERO;
    }

    //TODO: verify if this should contain the additional cost when additional cost is a deposit?
    public MMDecimal getInventoryCost() {
        if (this.returnQuantity > 0 && ObjectUtils.isNotNull(this.getOrderDetail()))
            return this.returnItemPrice != null ? new MMDecimal((this.getOrderDetail()
                    .getOrderItemCostAmt()).multiply(new MMDecimal(this.returnQuantity))
                    .doubleValue()) : MMDecimal.ZERO;
        return MMDecimal.ZERO;
    }

    public boolean isBinNeeded() {
        return this.actionCd != null
                && this.actionCd
                        .equalsIgnoreCase(MMConstants.ReturnActionCode.INVENTORY_ADJUSTMENT);
    }

    public boolean isDepartmentLine() {
        return this.actionCd != null
                && (this.actionCd.equalsIgnoreCase(MMConstants.ReturnActionCode.DEPT_CR) || this.actionCd
                        .equalsIgnoreCase(MMConstants.ReturnActionCode.DEPT_NC));
    }

    public void setReqsId(Integer reqsId) {
        this.reqsId = reqsId;
    }

    public Integer getPoId() {
        return this.poId;
    }

    public void setPoId(Integer poId) {
        this.poId = poId;
    }

    public boolean isItemReturned() {
        return itemReturned;
    }

    public ReturnStatusCode getReturnStatus() {

        return this.returnStatus;
    }

    public void setReturnStatus(ReturnStatusCode returnStatus) {
        this.returnStatus = returnStatus;
    }

    public Bin getBin() {
        return this.bin;
    }

    public void setBin(Bin bin) {
        this.bin = bin;
    }

    public Integer getBinId() {
        return binId;
    }

    public void setBinId(Integer binId) {
        this.binId = binId;
    }


    public String getReturnStatusName() {

        if (this.getReturnStatus() == null)
            return this.returnDetailStatusCode;

        return this.getReturnStatus().getReturnStatusCodeName();
    }

    public boolean isVendorReturnQuantityNeeded() {
        return this.actionCd != null
                && this.actionCd.equalsIgnoreCase(MMConstants.ReturnActionCode.RETURN_TO_VENDOR);
    }

    @Override
    public ReturnDetail clone() {
        try {
            return (ReturnDetail) super.clone();
        }
        catch (CloneNotSupportedException e) {
            throw new InternalError(e.toString());
        }
    }

    public boolean isDepartmentCreditInd() {
        return this.departmentCreditInd;
    }

    public void setDepartmentCreditInd(boolean departmentCreditInd) {
        this.departmentCreditInd = departmentCreditInd;
    }

    /**
     * toStringMapper
     * 
     * @return LinkedHashMap
     */
    @Override
    public LinkedHashMap toStringMapper() {
        LinkedHashMap propMap = new LinkedHashMap();
        return propMap;
    }

    public boolean requiresDummyOrder() {

        CheckinDetail cdetail = this.getCheckinDetail();

        if (cdetail == null)
            return false;

        Integer acceptedQty = cdetail.getAcceptedItemQty();
        Integer rejectedQty = this.getReturnQuantity();

        Integer totQty = acceptedQty + rejectedQty;
        Integer orderQty = this.getOrderDetail().getOrderItemQty();

        return totQty > orderQty;

    }

    /**
     * Gets the creditDocumentNumber property
     * 
     * @return Returns the creditDocumentNumber
     */
    public String getCreditDocumentNumber() {
        return this.creditDocumentNumber;
    }

    /**
     * Sets the creditDocumentNumber property value
     * 
     * @param creditDocumentNumber The creditDocumentNumber to set
     */
    public void setCreditDocumentNumber(String creditDocumentNumber) {
        this.creditDocumentNumber = creditDocumentNumber;
    }

    public void setDepartmentCreditStringInd(String departmentCreditStringInd) {
        this.departmentCreditStringInd = departmentCreditStringInd;
    }

    public String getDepartmentCreditStringInd() {
        return departmentCreditStringInd;
    }

    @Override
    public String toString() {
        return "ReturnDetail [actionCd=" + actionCd + ", catalogItem=" + catalogItem
                + ", catalogItemId=" + catalogItemId + ", checkinDetail=" + checkinDetail
                + ", checkinDetailId=" + checkinDetailId + ", itemReturned=" + itemReturned
                + ", orderDetail=" + orderDetail + ", orderDetailId=" + orderDetailId
                + ", orderDocumentNumber=" + orderDocumentNumber + ", orderLineNumber="
                + orderLineNumber + ", orderStatus=" + orderStatus + ", poId=" + poId + ", reqsId="
                + reqsId + ", returnCreditAmt=" + returnCreditAmt + ", returnDetailId="
                + returnDetailId + ", returnDetailStatusCode=" + returnDetailStatusCode
                + ", returnDoc=" + returnDoc + ", returnDocNumber=" + returnDocNumber
                + ", returnItemDetailDescription=" + returnItemDetailDescription
                + ", returnItemPercentage=" + returnItemPercentage + ", returnItemPrice="
                + returnItemPrice + ", returnQuantity=" + returnQuantity + ", returnTypeCode="
                + returnTypeCode + ", returnUnitOfIssue=" + returnUnitOfIssue
                + ", returnUnitOfIssueOfCode=" + returnUnitOfIssueOfCode
                + ", stockDistributorNumber=" + stockDistributorNumber + ", vendorCreditInd="
                + vendorCreditInd + ", vendorDetailAssignedId=" + vendorDetailAssignedId
                + ", vendorDispositionInd=" + vendorDispositionInd + ", vendorHeaderGeneratedId="
                + vendorHeaderGeneratedId + ", vendorNm=" + vendorNm + ", vendorReshipInd="
                + vendorReshipInd + "]";
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#isRentalAddable()
     */
    public boolean isRentalAddable() {        
        return true;
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getStagingRentals()
     */
    public List<StagingRental> getStagingRentals() {
        return getReturnRentals();
    }
    
    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getRentalsForDisplay()
     */
    public String getRentalsForDisplay() {
        StringBuffer sb = new StringBuffer();

        for (StagingRental data : returnRentals) {
            sb.append(data.getSerialNumber()).append(",");
        }

        if (sb.length() > 1)
            sb.deleteCharAt(sb.length() - 1);

        return sb.toString();
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getRentalTrackingDetailId()
     */
    public Integer getRentalTrackingDetailId() {
        return getReturnDetailId();
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#isTrackableStock()
     */
    public boolean isTrackableStock() {
        return SpringContext.getBean(StockService.class).isTrackableWithSerialNumber(this.getCatalogItem().getStock());
    }

}
