package org.kuali.ext.mm.businessobject;

// Generated Jul 13, 2009 9:05:12 AM by Hibernate Tools 3.2.4.GA

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.Table;

import org.kuali.ext.mm.common.sys.context.SpringContext;
import org.kuali.ext.mm.document.CheckinDocument;
import org.kuali.ext.mm.service.StockService;
import org.kuali.ext.mm.util.MMDecimal;
import org.kuali.rice.kns.util.ObjectUtils;


/**
 * CheckinDetail generated by hbm2java
 */
@Entity
@Table(name = "MM_CHECKIN_DETAIL_T")
public class CheckinDetail extends MMPersistableBusinessObjectBase implements RentalTrackingDetail, Cloneable {

    /**
     *
     */
    private static final long serialVersionUID = -3776895022480721416L;

    private Integer checkinDetailId;

    private CheckinDocument checkinDoc;

    private Bin bin;

    private List<Rental> rentals = new ArrayList<Rental>();

    private String binZoneDesc = null;

    private boolean lineCorrected = false;

    private ReturnStatusCode returnStatus;

    private Integer availableQty;

    private Integer prevCheckedInQuantity = 0;

    private Integer correctedCheckinDetailId;

    private CheckinDetail correctedCheckinDetail;

    private UnitOfIssue returnUnitOfIssue;

    private boolean existingBinCheckedIn = false;

    private Integer binId;

    private boolean closedInd;

    private Stock stock;

    private Integer returnDetailId;

    private List<ReturnDetail> returnDetails = new ArrayList<ReturnDetail>(0);

    private List<StagingRental> checkinRentals = new ArrayList<StagingRental>();

    private Timestamp stockPerishableDate;

    private List<CreditMemoExpected> creditMemoExpected = new ArrayList<CreditMemoExpected>(0);

    private String returnUnitOfIssueOfCode;

    private String returnDetailStatusCode;

    private Integer orderDetailId;

    private OrderDetail orderDetail;

    private String stockId;

    private Integer rejectedItemQty = 0;

    private String checkinDocumentNumber;

    private Integer acceptedItemQty = 0;

    private Integer initalAcceptedItemQty = 0;

    private boolean accepQtySet = false;

    private String reasonCode;

    private String returnStockUnitOfIssueCd;

    private Integer poId;

    private List<CheckinDetail> lineCorrections = new ArrayList<CheckinDetail>(0);

    public ReturnStatusCode getReturnStatus() {
        return returnStatus;
    }

    public void setReturnStatus(ReturnStatusCode returnStatus) {
        this.returnStatus = returnStatus;
    }

    public UnitOfIssue getReturnUnitOfIssue() {
        return returnUnitOfIssue;
    }

    public void setReturnUnitOfIssue(UnitOfIssue returnUnitOfIssue) {
        this.returnUnitOfIssue = returnUnitOfIssue;
    }

    public String getBinZoneDesc() {
        if (binZoneDesc == null && this.bin != null)
            binZoneDesc = bin.getBinDisDesc();
        if (binZoneDesc == null && this.binId != null) {
            bin = StoresPersistableBusinessObject.getObjectByPrimaryKey(Bin.class, binId);
            if (bin != null)
                binZoneDesc = bin.getBinDisDesc();
        }
        return binZoneDesc;
    }

    public void setBinZoneDesc(String binZoneDesc) {
        this.binZoneDesc = binZoneDesc;
    }

    public Integer getAvailableQty() {

        if (this.bin != null) {
            this.availableQty = bin.getAvailableQty();
        }

        // if(this.availableQty != null && this.availableQty != 0)
        // return this.availableQty;

        return this.availableQty;
    }

    public void setAvailableQty(Integer availableQty) {
        this.availableQty = availableQty;
    }

    public boolean isExistingBinCheckedIn() {
        return existingBinCheckedIn;
    }

    public void setExistingBinCheckedIn(boolean existingBinCheckedIn) {
        this.existingBinCheckedIn = existingBinCheckedIn;
    }

    public List<CreditMemoExpected> getCreditMemoExpected() {
        return this.creditMemoExpected;
    }

    public void setCreditMemoExpected(List<CreditMemoExpected> creditMemoExpected) {
        this.creditMemoExpected = creditMemoExpected;
    }

    public Timestamp getStockPerishableDate() {
        return stockPerishableDate;
    }

    public void setStockPerishableDate(Timestamp stockPerishableDate) {
        this.stockPerishableDate = stockPerishableDate;
    }

    public boolean isClosedInd() {
        return closedInd;
    }

    public void setClosedInd(boolean closedInd) {
        this.closedInd = closedInd;
    }

    public Integer getBinId() {
        return binId;
    }

    public void setBinId(Integer binId) {
        this.binId = binId;
    }

    public Stock getStock() {
        return stock;
    }

    public void setStock(Stock stock) {
        this.stock = stock;
    }

    public Integer getReturnDetailId() {
        return returnDetailId;
    }

    public List<ReturnDetail> getReturnDetails() {
        return returnDetails;
    }

    public void setReturnDetails(List<ReturnDetail> returnDetails) {
        this.returnDetails = returnDetails;
    }

    public void setReturnDetailId(Integer returnDetailId) {
        this.returnDetailId = returnDetailId;
    }

    public List<Rental> getRentals() {
        return rentals;
    }

    public void setRentals(List<Rental> rental) {
        this.rentals = rental;
    }

    public void addRental(Rental rental) {
        this.rentals.add(rental);
    }

    public boolean isRentalsCheckedIn() {
        return this.rentals.size() > 0;
    }

    public List<StagingRental> getCheckinRentals() {
        return checkinRentals;
    }

    public void setCheckinRentals(List<StagingRental> checkinRentals) {
        this.checkinRentals = checkinRentals;
    }

    public void addCheckinRental(StagingRental checkinRental) {
        this.checkinRentals.add(checkinRental);
    }

    public boolean isCheckinRentalCheckedIn() {
        return this.checkinRentals.size() > 0;
    }

    public String getReturnUnitOfIssueOfCode() {
        return returnUnitOfIssueOfCode;
    }

    public void setReturnUnitOfIssueOfCode(String returnUnitOfIssueOfCode) {
        this.returnUnitOfIssueOfCode = returnUnitOfIssueOfCode;
    }

    public String getReturnDetailStatusCode() {
        return returnDetailStatusCode;
    }

    public void setReturnDetailStatusCode(String returnDetailStatusCode) {
        this.returnDetailStatusCode = returnDetailStatusCode;
    }

    public OrderDetail getOrderDetail() {
        return orderDetail;
    }

    public void setOrderDetail(OrderDetail orderDetail) {
        this.orderDetail = orderDetail;
    }

    public String getStockId() {
        return stockId;
    }

    public void setStockId(String stockId) {
        this.stockId = stockId;
    }

    public Integer getOrderDetailId() {
        return orderDetailId;
    }

    public void setOrderDetailId(Integer orderDetailId) {
        this.orderDetailId = orderDetailId;
    }

    public boolean isLineNew() {
        return this.binId == null || this.binId == 0;
    }

    // BEGIN OJB
    public boolean isAccepQtySet() {
        return accepQtySet;
    }

    public void setAccepQtySet(boolean accepQtySet) {
        this.accepQtySet = accepQtySet;
    }

    public Integer getInitalAcceptedItemQty() {
        return initalAcceptedItemQty;
    }

    public void setInitalAcceptedItemQty(Integer initalAcceptedItemQty) {
        this.initalAcceptedItemQty = initalAcceptedItemQty;
        this.accepQtySet = true;
    }

    public CheckinDetail() {
    }

    public boolean isMultiCheckinLines() {

        List<CheckinDetail> cdetails = this.orderDetail.getCheckinDetails();

        int size = 0;

        for (CheckinDetail cdetail : cdetails) {
            if (cdetail.getCheckinDocumentNumber()
                    .equalsIgnoreCase(this.getCheckinDocumentNumber()))
                size++;
        }

        return size > 1;
    }

    public Integer getCheckinDetailId() {
        return this.checkinDetailId;
    }

    public void setCheckinDetailId(Integer checkinDetailId) {
        this.checkinDetailId = checkinDetailId;
    }

    public CheckinDocument getCheckinDoc() {
        return this.checkinDoc;
    }

    public void setCheckinDoc(CheckinDocument checkinDoc) {
        this.checkinDoc = checkinDoc;
    }

    public Bin getBin() {
        return this.bin;
    }

    public void setBin(Bin bin) {
        this.bin = bin;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((this.checkinDetailId == null) ? 0 : this.checkinDetailId.hashCode());
        result = prime * result
                + ((this.orderDetailId == null) ? 0 : this.orderDetailId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        CheckinDetail other = (CheckinDetail) obj;
        if (this.checkinDetailId == null) {
            if (other.checkinDetailId != null)
                return false;
        }
        else if (!this.checkinDetailId.equals(other.checkinDetailId))
            return false;
        if (this.orderDetailId == null) {
            if (other.orderDetailId != null)
                return false;
        }
        else if (!this.orderDetailId.equals(other.orderDetailId))
            return false;
        return true;
    }

    // BEGIN OJB
    public String getCheckinDocumentNumber() {
        return checkinDocumentNumber;
    }

    public void setCheckinDocumentNumber(String checkinDocumentNumber) {
        this.checkinDocumentNumber = checkinDocumentNumber;
    }

    public Integer getAcceptedItemQty() {
        return this.acceptedItemQty;
    }

    public Integer getCorrectedQuantity() {
        if(ObjectUtils.isNull(getCorrectedCheckinDetail()))
            return 0;
        Integer originalAcceptedQty = (getCorrectedCheckinDetail().getAcceptedItemQty() != null) ? 
                getCorrectedCheckinDetail().getAcceptedItemQty() : 0;
        Integer correctedAcceptedQty = (this.getAcceptedItemQty() != null) ? this.getAcceptedItemQty() : 0;
        return originalAcceptedQty - correctedAcceptedQty;
    }

    public void setAcceptedItemQty(Integer acceptedItemQty) {
        this.acceptedItemQty = acceptedItemQty;
    }

    public Integer getRejectedItemQty() {
        return this.rejectedItemQty;
    }

    public void setRejectedItemQty(Integer rejectedItemQty) {
        this.rejectedItemQty = rejectedItemQty;
    }

    public Integer getPoId() {
        return this.poId;
    }

    public void setPoId(Integer poId) {
        this.poId = poId;
    }

    public String getReasonCode() {
        return reasonCode;
    }

    public boolean isBinRemovable() {
        return this.acceptedItemQty == null
                || this.acceptedItemQty == 0
                || (this.bin != null ? this.bin.getAvailableQty() == this.acceptedItemQty
                        : this.orderDetail.getCheckinDetails().size() < 3);
    }

    public void setReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
    }

    public String getReturnStockUnitOfIssueCd() {
        return returnStockUnitOfIssueCd;
    }

    public void setReturnStockUnitOfIssueCd(String returnStockUnitOfIssueCd) {
        this.returnStockUnitOfIssueCd = returnStockUnitOfIssueCd;
    }

    public boolean isLineCorrected() {
        return this.lineCorrected;
    }

    public void setLineCorrected(boolean lineCorrected) {
        this.lineCorrected = lineCorrected;
    }

    public Integer getPrevCheckedInQuantity() {
        return this.prevCheckedInQuantity;
    }

    public void setPrevCheckedInQuantity(Integer prevCheckedInQuantity) {
        this.prevCheckedInQuantity = prevCheckedInQuantity;
    }

    public Integer getRemainingQuantity() {
        return this.orderDetail.getOrderItemQty().intValue() - this.acceptedItemQty;
    }

    public Integer getCorrectedCheckinDetailId() {
        return this.correctedCheckinDetailId;
    }

    public void setCorrectedCheckinDetailId(Integer correctedCheckinDetailId) {
        this.correctedCheckinDetailId = correctedCheckinDetailId;
    }

    public CheckinDetail getCorrectedCheckinDetail() {
        return this.correctedCheckinDetail;
    }

    public void setCorrectedCheckinDetail(CheckinDetail correctedCheckinDetail) {
        this.correctedCheckinDetail = correctedCheckinDetail;
    }

    @Override
    public String toString() {
        return "CheckinDetail [acceptedItemQty=" + acceptedItemQty + ", binId=" + binId
                + ", checkinDetailId=" + checkinDetailId + ", checkinDocumentNumber="
                + checkinDocumentNumber + ", initalAcceptedItemQty=" + initalAcceptedItemQty
                + ", orderDetailId=" + orderDetailId + ", poId=" + poId + ", reasonCode="
                + reasonCode + ", rejectedItemQty=" + rejectedItemQty + ", returnDetailId="
                + returnDetailId + ", returnDetailStatusCode=" + returnDetailStatusCode
                + ", returnStockUnitOfIssueCd=" + returnStockUnitOfIssueCd
                + ", returnUnitOfIssueOfCode=" + returnUnitOfIssueOfCode + ", stockId=" + stockId
                + "]";
    }

    /**
     * toStringMapper
     * 
     * @return LinkedHashMap
     */
    @Override
    public LinkedHashMap toStringMapper() {
        LinkedHashMap propMap = new LinkedHashMap();
        // TODO: Autogenerated method

        return propMap;
    }

    @Override
    public Object clone() {
        try {
            return super.clone();
        }
        catch (CloneNotSupportedException e) {
            throw new InternalError(e.toString());
        }
    }

    public List<CheckinDetail> getLineCorrections() {
        return this.lineCorrections;
    }

    public void setLineCorrections(List<CheckinDetail> lineCorrections) {
        this.lineCorrections = lineCorrections;
    }

    public void addLineCorrections(CheckinDetail lineCorrections) {
        this.lineCorrections.add(lineCorrections);
    }

    /**
     * @see org.kuali.rice.kns.bo.PersistableBusinessObjectBase#buildListOfDeletionAwareLists()
     */
    @Override
    public List buildListOfDeletionAwareLists() {
        List buildListOfDeletionAwareLists = super.buildListOfDeletionAwareLists();
        buildListOfDeletionAwareLists.add(getCheckinRentals());
        return buildListOfDeletionAwareLists;
    }

    public double computeAcceptedBuyQuantity() {
        if (ObjectUtils.isNotNull(getOrderDetail())) {
            MMDecimal buyUnitOfIssueRt = getOrderDetail().getBuyUnitOfIssueRt();
            return getAcceptedItemQty() / buyUnitOfIssueRt.doubleValue();
        }
        return getAcceptedItemQty();
    }

    /**
     * @return
     */
    public MMDecimal getBuyUnitOfIssueRt() {
        if (ObjectUtils.isNotNull(getOrderDetail())) {
            return getOrderDetail().getBuyUnitOfIssueRt();
        }
        return new MMDecimal(1);
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#isRentalAddable()
     */
    public boolean isRentalAddable() {
        return ObjectUtils.isNull(this.getCorrectedCheckinDetail()) 
            || this.getStagingRentals().size() < this.getCorrectedCheckinDetail().getAcceptedItemQty();
    }
    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getStagingRentals()
     */
    public List<StagingRental> getStagingRentals() {
        return this.getCheckinRentals();
    }
    
    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getRentalsForDisplay()
     */
    public String getRentalsForDisplay() {
        StringBuffer sb = new StringBuffer();

        for (StagingRental data : checkinRentals) {
            sb.append(data.getSerialNumber()).append(",");
        }

        if (sb.length() > 1)
            sb.deleteCharAt(sb.length() - 1);

        return sb.toString();
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#getRentalTrackingDetailId()
     */
    public Integer getRentalTrackingDetailId() {
        return this.getCheckinDetailId();
    }

    /**
     * @see org.kuali.ext.mm.businessobject.RentalTrackingDetail#isTrackableStock()
     */
    public boolean isTrackableStock() {
        return SpringContext.getBean(StockService.class).isTrackableWithSerialNumber(this.getStock());
    }
}
