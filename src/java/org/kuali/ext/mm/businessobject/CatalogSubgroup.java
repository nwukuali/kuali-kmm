package org.kuali.ext.mm.businessobject;

// Generated Jun 15, 2009 10:20:45 AM by Hibernate Tools 3.2.4.GA

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.kuali.ext.mm.common.sys.MMConstants;
import org.kuali.ext.mm.common.sys.context.SpringContext;
import org.kuali.rice.kns.service.BusinessObjectService;
import org.kuali.rice.kns.util.ObjectUtils;


/**
 * CatalogSubgroup generated by hbm2java
 */
@Entity
@Table(name = "MM_CATALOG_SUBGROUP_T")
public class CatalogSubgroup extends MMPersistableBusinessObjectBase {

    /**
     * property 'catalogGroupCd' is not a property of class 'org.kuali.ext.mm.businessobject.CatalogSubgroup' ()
     */
    private static final long serialVersionUID = 1L;

    @Id
    @Column(name = "CATALOG_SUBGROUP_ID", unique = true, nullable = false, length = 36)
    private String catalogSubgroupId;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CATALOG_GROUP_CD", nullable = false)
    private CatalogGroup catalogGroup;

    private CatalogSubgroup priorCatalogSubgroup;

    @Column(name = "CATALOG_GROUP_CD")
    private String catalogGroupCd;

    @Column(name = "CATALOG_SUBGROUP_CD", nullable = false, length = 12)
    private String catalogSubgroupCd;


    @Column(name = "CATALOG_SUBGROUP_DESC", nullable = false, length = 80)
    private String catalogSubgroupDesc;

    @Column(name = "PRIOR_CATALOG_SUBGROUP_ID", length = 12)
    private String priorCatalogSubgroupId;

    @Transient
    private Integer resultSetCount;

    private List<CatalogSubgroup> catalogSubgroups;

    public CatalogSubgroup() {
        setCatalogSubgroups(new ArrayList<CatalogSubgroup>());
    }

    public String getCatalogSubgroupId() {
        return this.catalogSubgroupId;
    }

    public void setCatalogSubgroupId(String catalogSubgroupId) {
        this.catalogSubgroupId = catalogSubgroupId;
    }

    public CatalogGroup getCatalogGroup() {
        return this.catalogGroup;
    }

    public void setCatalogGroup(CatalogGroup catalogGroup) {
        this.catalogGroup = catalogGroup;
    }

    public void setPriorCatalogSubgroup(CatalogSubgroup priorCatalogSubgroup) {
        this.priorCatalogSubgroup = priorCatalogSubgroup;
    }

    public CatalogSubgroup getPriorCatalogSubgroup() {
        if (StringUtils.isNotBlank(getPriorCatalogSubgroupId())) {
            CatalogSubgroup catalogSubgroup = findCatalogSubGroup(getPriorCatalogSubgroupId());
            if (ObjectUtils.isNotNull(catalogSubgroup)) {
                setPriorCatalogSubgroup(catalogSubgroup);
            }
        }
        return priorCatalogSubgroup;
    }

    public String getCatalogGroupCd() {
        return catalogGroupCd;
    }

    public void setCatalogGroupCd(String catalogGroupCd) {
        this.catalogGroupCd = catalogGroupCd;
    }

    public static long getSerialVersionUID() {
        return serialVersionUID;
    }

    // END OJB
    public String getCatalogSubgroupCd() {
        return this.catalogSubgroupCd;
    }

    public void setCatalogSubgroupCd(String catalogSubgroupCd) {
        this.catalogSubgroupCd = catalogSubgroupCd;
    }

    public String getCatalogSubgroupDesc() {
        return this.catalogSubgroupDesc;
    }

    public void setCatalogSubgroupDesc(String catalogSubgroupDesc) {
        this.catalogSubgroupDesc = catalogSubgroupDesc;
    }

    public String getPriorCatalogSubgroupId() {
        return this.priorCatalogSubgroupId;
    }

    public void setPriorCatalogSubgroupId(String priorCatalogSubgroupId) {
        this.priorCatalogSubgroupId = priorCatalogSubgroupId;
    }

    public void setCatalogSubgroups(List<CatalogSubgroup> catalogSubgroups) {
        this.catalogSubgroups = catalogSubgroups;
    }

    public List<CatalogSubgroup> getCatalogSubgroups() {
        return catalogSubgroups;
    }

    public void setResultSetCount(Integer resultSetCount) {
        this.resultSetCount = resultSetCount;
    }

    public Integer getResultSetCount() {
        return resultSetCount;
    }

    @Override
    public boolean equals(Object catalogSubgroup) {
        if (ObjectUtils.isNull(catalogSubgroup))
            return false;

        return this.getCatalogSubgroupId().equals(
                ((CatalogSubgroup) catalogSubgroup).getCatalogSubgroupId());
    }

    @Override
    public int hashCode() {
        HashCodeBuilder hashCodeBuilder = new HashCodeBuilder(37, 41);
        hashCodeBuilder.append(this.catalogSubgroupId);
        return hashCodeBuilder.toHashCode();
    }

    /**
     * toStringMapper
     *
     * @return LinkedHashMap
     */
    @Override
    public LinkedHashMap toStringMapper() {
        LinkedHashMap propMap = new LinkedHashMap();
        // TODO: Autogenerated method

        return propMap;
    }

    private CatalogSubgroup findCatalogSubGroup(String priorCatalogSubgroupId) {
        HashMap<String, Object> primaryKeys = new HashMap<String, Object>();
        primaryKeys.put(MMConstants.CatalogSubgroup.CATALOG_SUBGRUP_ID, priorCatalogSubgroupId);
        return (CatalogSubgroup) SpringContext.getBean(BusinessObjectService.class)
                .findByPrimaryKey(CatalogSubgroup.class, primaryKeys);
    }

}
