package org.kuali.ext.mm.businessobject;

// Generated May 19, 2009 9:29:05 AM by Hibernate Tools 3.2.4.GA

import java.util.LinkedHashMap;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.cxf.common.util.StringUtils;
import org.kuali.ext.mm.document.WorksheetCountDocument;
import org.kuali.rice.kim.bo.entity.dto.KimPrincipalInfo;
import org.kuali.rice.kim.bo.impl.PersonImpl;

/**
 * WorksheetCounter generated by hbm2java
 */
@Entity
@Table(name = "MM_WORKSHEET_COUNTER_T")
public class WorksheetCounter extends MMPersistableBusinessObjectBase {

    /**
     *
     */
    private static final long serialVersionUID = -6582380266677805196L;

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((worksheetCountId == null) ? 0 : worksheetCountId.hashCode());
        result = prime * result
                + ((worksheetCounterId == null) ? 0 : worksheetCounterId.hashCode());
        result = prime * result + ((worksheetPrncplId == null) ? 0 : worksheetPrncplId.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        WorksheetCounter other = (WorksheetCounter) obj;
        if (worksheetCountId == null) {
            if (other.worksheetCountId != null)
                return false;
        }
        else if (!worksheetCountId.equals(other.worksheetCountId))
            return false;
        if (worksheetCounterId == null) {
            if (other.worksheetCounterId != null)
                return false;
        }
        else if (!worksheetCounterId.equals(other.worksheetCounterId))
            return false;
        if (worksheetPrncplId == null) {
            if (other.worksheetPrncplId != null)
                return false;
        }
        else if (!worksheetPrncplId.equals(other.worksheetPrncplId))
            return false;
        return true;
    }

    @Id
    @Column(name = "WORKSHEET_COUNTER_ID", unique = true, nullable = false, length = 36)
    private String worksheetCounterId;
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "WORKSHEET_COUNT_ID", nullable = false)
    private WorksheetCountDocument worksheetCount;

    @Column(name = "WORKSHEET_PRNCPL_ID", nullable = false, length = 100)
    private String worksheetPrncplId;

    @Column(name = "WORKSHEET_COUNT_ID", unique = true, nullable = false, length = 36)
    private String worksheetCountId;

    private String worksheetPrncplName;

    public String getWorksheetPrncplName() {

        if (StringUtils.isEmpty(worksheetPrncplName)) {
            KimPrincipalInfo pp = PersonImpl.getIdentityManagementService().getPrincipal(
                    this.worksheetPrncplId);
            worksheetPrncplName = pp != null ? pp.getPrincipalName() : "";
        }
        return worksheetPrncplName;
    }

    public void setWorksheetPrncplName(String worksheetPrncplName) {
        this.worksheetPrncplName = worksheetPrncplName;
    }

    public String getWorksheetCountId() {
        return worksheetCountId;
    }

    public void setWorksheetCountId(String worksheetCountId) {
        this.worksheetCountId = worksheetCountId;
    }

    public WorksheetCounter() {
    }

    public String getWorksheetCounterId() {
        return this.worksheetCounterId;
    }

    public void setWorksheetCounterId(String worksheetCounterId) {
        this.worksheetCounterId = worksheetCounterId;
    }

    public WorksheetCountDocument getWorksheetCount() {
        return this.worksheetCount;
    }

    public void setWorksheetCount(WorksheetCountDocument worksheetCount) {
        this.worksheetCount = worksheetCount;
    }

    public String getWorksheetPrncplId() {
        return this.worksheetPrncplId;
    }

    public void setWorksheetPrncplId(String worksheetPrncplId) {
        this.worksheetPrncplId = worksheetPrncplId;
    }

    /**
     * toStringMapper
     * 
     * @return LinkedHashMap
     */
    @Override
    public LinkedHashMap toStringMapper() {
        LinkedHashMap propMap = new LinkedHashMap();
        return propMap;
    }

}
