package org.kuali.ext.mm.businessobject;

// Generated Apr 16, 2009 10:01:00 AM by Hibernate Tools 3.2.4.GA

import java.util.LinkedHashMap;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.kuali.rice.kns.util.KualiDecimal;

/**
 * AdditionalCost generated by hbm2java
 */
@Entity
@Table(name = "MM_ADDITIONAL_COST_T")
public class AdditionalCost extends MMPersistableBusinessObjectBase implements
		java.io.Serializable {

	private static final long serialVersionUID = -8777096018677228664L;
	/* BEGIN JPA
	   @EmbeddedId

	   @AttributeOverrides( {
	       @AttributeOverride(name="shopCartId", column=@Column(name="SHOP_CART_ID", nullable=false, length=12) ),
	       @AttributeOverride(name="lineNbr", column=@Column(name="LINE_NBR", nullable=false, precision=8, scale=0) ),
	       @AttributeOverride(name="additionalCostTypeCd", column=@Column(name="ADDITIONAL_COST_TYPE_CD", nullable=false, length=12) ),
	       @AttributeOverride(name="customerId", column=@Column(name="CUSTOMER_ID", nullable=false, length=12) ) } )
	private AdditionalCostId id;
	END JPA */
	//BEGIN OJB
	@Id
	@Column(name = "SHOP_CART_ID", nullable = false, length = 12)
	private String shopCartId;
	@Id
	@Column(name = "LINE_NBR", nullable = false, precision = 8, scale = 0)
	private Integer lineNbr;
	@Id
	@Column(name = "ADDITIONAL_COST_TYPE_CD", nullable = false, length = 12)
	private String additionalCostTypeCd;
	@Id
	@Column(name = "CUSTOMER_ID", nullable = false, length = 12)
	private String customerId;
	//END OJB
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns( {
			@JoinColumn(name = "CUSTOMER_ID", referencedColumnName = "CUSTOMER_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "SHOP_CART_ID", referencedColumnName = "SHOP_CART_ID", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "LINE_NBR", referencedColumnName = "LINE_NBR", nullable = false, insertable = false, updatable = false) })
	private ShopCartDetail shopCartDetail;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ADDITIONAL_COST_TYPE_CD", nullable = false, insertable = false, updatable = false)
	private AdditionalCostType additionalCostType;

	@Column(name = "ADDTNL_CST", nullable = false, precision = 8)
	private KualiDecimal addtnlCst;

	public AdditionalCost() {
	}

	/* BEGIN JPA
	 public AdditionalCostId getId() {
	 return this.id;
	 }

	 public void setId(AdditionalCostId id) {
	 this.id = id;
	 }
	 END JPA */
	//BEGIN OJB
	public String getShopCartId() {
		return this.shopCartId;
	}

	public void setShopCartId(String shopCartId) {
		this.shopCartId = shopCartId;
	}

	public Integer getLineNbr() {
		return this.lineNbr;
	}

	public void setLineNbr(Integer lineNbr) {
		this.lineNbr = lineNbr;
	}

	public String getAdditionalCostTypeCd() {
		return this.additionalCostTypeCd;
	}

	public void setAdditionalCostTypeCd(String additionalCostTypeCd) {
		this.additionalCostTypeCd = additionalCostTypeCd;
	}

	public String getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}

	//END OJB
	public ShopCartDetail getShopCartDetail() {
		return this.shopCartDetail;
	}

	public void setShopCartDetail(ShopCartDetail shopCartDetail) {
		this.shopCartDetail = shopCartDetail;
	}

	public AdditionalCostType getAdditionalCostType() {
		return this.additionalCostType;
	}

	public void setAdditionalCostType(AdditionalCostType additionalCostType) {
		this.additionalCostType = additionalCostType;
	}

	public KualiDecimal getAddtnlCst() {
		return this.addtnlCst;
	}

	public void setAddtnlCst(KualiDecimal addtnlCst) {
		this.addtnlCst = addtnlCst;
	}

	/**
	 * toStringMapper
	 * @return LinkedHashMap
	 */
	@Override
    public LinkedHashMap toStringMapper() {
		LinkedHashMap propMap = new LinkedHashMap();
		//TODO:  Autogenerated method

		return propMap;
	}

}
